webpackJsonp([4],{

/***/ "./src/app/+paging-and-state/paging-and-state.component.html":
/***/ function(module, exports) {

module.exports = "<h2>Paging and lists state</h2>\r\n<h3>Table of contents</h3>\r\n<ul class=\"agenda\">\r\n\t<li><a href=\"paging-and-state#common-idea\">Общая идея</a></li>\r\n\t<li><a href=\"paging-and-state#bootstrap\">Как подключить</a></li>\r\n\t<li><a href=\"paging-and-state#state-components\">Компоненты состояния</a></li>\r\n\t<li>\r\n\t\t<a href=\"paging-and-state#paged-pager\">Использование <code>rt-paged-pager</code> component</a>\r\n\t</li>\r\n\t<li>\r\n\t\t<a href=\"paging-and-state#paged-directives\">Additional paged pager directives</a>\r\n\t</li>\r\n\t<li>\r\n\t\t<a href=\"paging-and-state#buffered-pager\">Использование <code>rt-buffered-pager</code> component</a>\r\n\t</li>\r\n\t<li>\r\n\t\t<a href=\"paging-and-state#buffered-directives\">Additional buffered pager directives</a>\r\n\t</li>\r\n</ul>\r\n<section id=\"common-idea\">\r\n\t<aside>\r\n\t\t<p>\r\n\t\t\tВ примерах данного раздела мы используем полноценные списки, чтобы их было привычнее воспринимать. Но все интересное и касающееся\r\n\t\t\tданного раздела будет происходить исключительно в элементе <code>tfoot</code> в шаблоне.\r\n\t\t</p>\r\n\t</aside>\r\n\r\n\r\n\t<h3>Общая идея</h3>\r\n\t<p>\r\n\t\tДля работы с paging в нашей библиотеке реализовано множество небольших контролов, ни один из которых не влияет на стили вашего\r\n\t\tконечного приложения. Идея заключается в том, что вы можете самостоятельно собрать нужный вам пейджер с нужной вам версткой,\r\n\t\tстилями и функционалом.\r\n\t</p>\r\n\t<p>\r\n\r\n\t\tТак же вы легко можете реализовать свои контролы. Для этого необходимо заинжектить в конструктор сервис <a target=\"_blank\"\r\n\t\t\thref=\"https://fshchudlo.github.io/e2e4/classes/pagedpager.html\">PagedPager</a> либо <a target=\"_blank\" href=\"https://fshchudlo.github.io/e2e4/classes/bufferedpager.html\">BufferedPager</a>\t\tи разместить реализованные контролы внутри соответствующего компонента (<code>rt-paged-pager</code> либо <code>rt-buffered-pager</code>)\r\n\t</p>\r\n\t<p>\r\n\t\tНиже мы перечислим все имеющиеся компоненты и директивы, касающиеся paging-а и отображения состояния списка. В конце мы представим\r\n\t\tварианты собранных pagers для paged и buffered списков.\r\n\t</p>\r\n</section>\r\n<section id=\"bootstrap\">\r\n\t<h3>Как подключить</h3>\r\n\t<p>\r\n\t\tДля работы со списками необходимо импортировать модуль <code>RTListsModule</code> и подключить его в вашем <code>AppModule</code>.\r\n\t\tТак же вы можете импортировать модуль <code>RtModule</code>, включающий в себя функционал всей библиотеки <code>right-angled</code>\t\tцеликом.\r\n\t</p>\r\n\t<rt-demo-tab-section>\r\n\t\t<rt-demo-code-tab url=\"%2Bpaging-and-state/bootstrap/app.module.tsfake\">\r\n\t\t</rt-demo-code-tab>\r\n\t</rt-demo-tab-section>\r\n</section>\r\n<section id=\"state-components\">\r\n\t<h3>Компоненты состояния</h3>\r\n\t<p>\r\n\t\tСуть данного набора компонентов проста: каждый из них является контейнером для контента, который необходимо отображать только\r\n\t\tкогда список находится в одном из возможных состояний <a target=\"_blank\" href=\"http://fshchudlo.github.io/e2e4/enums/progressstate.html\">ProgressState</a>.\r\n\t</p>\r\n\t<ul class=\"bulleted\">\r\n\t\t<li><code>rt-list-state-initial</code> - отображает внутреннее содержимое пока не выполнено ни одного запроса</li>\r\n\t\t<li><code>rt-list-state-progress</code> - отображает внутреннее содержимое пока выполняется запрос данных. Идеально подходит\r\n\t\t\tдля отображения progress bar</li>\r\n\t\t<li><code>rt-list-state-no-data</code> - отображает внутреннее содержимое, когда запрос выполнен и возвращено 0 записей</li>\r\n\t\t<li><code>rt-list-state-request-cancelled</code> - отображает внутреннее содержимое если запрос был отменен (например, вызовом\r\n\t\t\tметода <code>rtList.cancelRequests</code>)</li>\r\n\t\t<li><code>rt-list-state-failed</code> - отображает внутреннее содержимое если последний запрос закончился с ошибкой</li>\r\n\t\t<li><code>rt-list-state-done</code> - отображает внутреннее содержимое если последний запрос был выполнен без ошибок и были\r\n\t\t\tвозвращены записи</li>\r\n\t</ul>\r\n\t<p>\r\n\t\tНиже приведен пример, в элементе <code>tfoot</code> которого использованы все 6 компонентов состояний. Нажимая на соответствующие\r\n\t\tкнопки в тулбаре вы можете увидеть их все.\r\n\t</p>\r\n\r\n\t<rt-demo-tab-section>\r\n\t\t<rt-demo-sample-tab>\r\n\t\t\t<rt-demo-state-components></rt-demo-state-components>\r\n\t\t</rt-demo-sample-tab>\r\n\t\t<rt-demo-code-tab url=\"%2Bpaging-and-state/state-components/state-components.component.html\">\r\n\t\t</rt-demo-code-tab>\r\n\t\t<rt-demo-code-tab url=\"%2Bpaging-and-state/state-components/state-components.component.ts\">\r\n\t\t</rt-demo-code-tab>\r\n\t</rt-demo-tab-section>\r\n\r\n</section>\r\n<section id=\"paged-pager\">\r\n\t<h3>Использование <code>rt-paged-pager</code> component</h3>\r\n\t<p>\r\n\t\tПрежде всего, чтобы реализовать paged pager, необходимо использовать компонент <code>rt-paged-pager</code>. Данный компонент\r\n\t\tрегистрирует себя в листе и, таким образом, список получает функциональность paging. Так же данный компонент служит контейнером\r\n\t\tдля целого ряда компонент и директив, при помощи которых реализуется pager.\r\n\t</p>\r\n\t<p>\r\n\t\tДанный компонент имеет следующие методы и свойства:\r\n\t</p>\r\n\t<h4>minPageSize = \"&lt;number&gt;\"</h4>\r\n\t<p>\r\n\t\tПозволяет указать минимальное возможное значение для параметра <code>take</code> пейджера. По умолчанию равен 1.\r\n\t</p>\r\n\t<h4>maxPageSize = \"&lt;number&gt;\"</h4>\r\n\t<p>\r\n\t\tПозволяет указать максимальное возможное значение для параметра <code>take</code> пейджера. По умолчанию равен 200.\r\n\t</p>\r\n\t<h4>defaultPageSize = \"&lt;number&gt;\"</h4>\r\n\t<p>\r\n\t\tПозволяет указать значение по умолчанию для свойства <code>take</code> размера страницы списка. По умолчанию равен 20.\r\n\t</p>\r\n\r\n\t<aside>\r\n\t\t<p>\r\n\t\t\tВы так же можете изменить значения <code>minPageSize</code>, <code>maxPageSize</code> и <code>defaultPageSize</code> глобально.\r\n\t\t\tДля этого необходимо импортировать сервис <code>PagedPager</code> из библиотеки <code>right-angled</code> и установить\r\n\t\t\tзначения в статическом объекте <code>settings</code>.\r\n\t\t</p>\r\n\t\t<rt-demo-tab-section>\r\n\t\t\t<rt-demo-code-tab url=\"%2Bpaging-and-state/global-configuration/app.component.paged.ts\">\r\n\t\t\t</rt-demo-code-tab>\r\n\t\t</rt-demo-tab-section>\r\n\t</aside>\r\n\t<h4>goToFirstPage</h4>\r\n\t<p>\r\n\t\tВыполняет переход на первую страницу списка, если это возможно.\r\n\t</p>\r\n\t<h4>goToPreviousPage</h4>\r\n\t<p>\r\n\t\tВыполняет переход на предыдущую страницу списка, если это возможно.\r\n\t</p>\r\n\t<h4>goToNextPage</h4>\r\n\t<p>\r\n\t\tВыполняет переход на следующую страницу списка, если это возможно.\r\n\t</p>\r\n\t<h4>goToLastPage</h4>\r\n\t<p>\r\n\t\tВыполняет переход на последнюю страницу списка, если это возможно.\r\n\t</p>\r\n\t<h4>canMoveBackward</h4>\r\n\t<p>\r\n\t\tВозвращает <code>true</code> если возможен переход на страницу назад (т.е. если текущая страница pager-а не первая).\r\n\t</p>\r\n\t<h4>canMoveForward</h4>\r\n\t<p>\r\n\t\tВозвращает <code>true</code> если возможен переход на страницу вперед (т.е. если текущая страница pager-а не последняя).\r\n\t</p>\r\n\t<p>\r\n\t\tНиже вы можете увидеть реализацию paged pager-а и живое демо использующего его списка его работы.\r\n\t</p>\r\n\t<aside>\r\n\t\t<p>\r\n\t\t\tШаблон pager-а выглядит несколько жутко и лучше бы реализовать отдельные компоненты-кнопки, вместо вызова методов pager-а\r\n\t\t\tпрямо в шаблоне. Но такой подход с проще с точки зрения демонстрации возможностей фреймворка.\r\n\t\t</p>\r\n\t</aside>\r\n\t<rt-demo-tab-section>\r\n\t\t<rt-demo-sample-tab>\r\n\t\t\t<rt-demo-reusable-buffered-sample></rt-demo-reusable-buffered-sample>\r\n\t\t</rt-demo-sample-tab>\r\n\t\t<rt-demo-code-tab url=\"shared/footers/buffered-footer.component/buffered-footer.component.html\">\r\n\t\t</rt-demo-code-tab>\r\n\t\t<rt-demo-code-tab url=\"shared/footers/buffered-footer.component/buffered-footer.component.ts\">\r\n\t\t</rt-demo-code-tab>\r\n\t</rt-demo-tab-section>\r\n\r\n</section>\r\n<section id=\"paged-directives\">\r\n\t<h3>Additional paged pager directives</h3>\r\n\t<h4>rtPageNumber</h4>\r\n\t<p>\r\n\t\tЭлемент <code>input</code> помеченный данной директивой получает функциональность перехода на другую страницу списка. Вводимые\r\n\t\tзначения ограничиваются рядом правил. Например, нельзя указать значение большее, чем общее число страниц в списке. При\r\n\t\tнажатии клавиши <code>Enter</code> в данном элементе будет выполняться загрузка данных.\r\n\t</p>\r\n\t<h4>rtPageSize</h4>\r\n\t<p>\r\n\t\tЭлемент <code>input</code> помеченный данной директивой получает функциональность изменения размера страницы списка. Вводимые\r\n\t\tзначения ограничиваются рядом правил. Например, нельзя указать значение большее, чем\r\n\t\t<a target=\"_blank\" href=\"http://fshchudlo.github.io/e2e4/classes/pagedpager.html#maxpagesize\">maxPageSize</a>. При нажатии\r\n\t\tклавиши <code>Enter</code> так же будет выполняться загрузка данных.\r\n\t</p>\r\n</section>\r\n<section id=\"buffered-pager\">\r\n\t<h3>Использование <code>rt-buffered-pager</code> component</h3>\r\n\t<p>\r\n\t\tКак и в случае с <code>paged pager</code>, все начинается с компонента-контейнера, но на этот раз это <code>rt-buffered-pager</code>.\r\n\t</p>\r\n\t<p>\r\n\t\tДанный компонент имеет следующие параметры настройки:\r\n\t</p>\r\n\t<h4>minRowCount = \"&lt;number&gt;\"</h4>\r\n\t<p>\r\n\t\tПозволяет указать минимальное возможное значение для параметра <code>take</code> пейджера. По умолчанию равен 1.\r\n\t</p>\r\n\t<h4>maxRowCount = \"&lt;number&gt;\"</h4>\r\n\t<p>\r\n\t\tПозволяет указать максимальное возможное значение для параметра <code>take</code> пейджера. По умолчанию равен 200.\r\n\t</p>\r\n\t<h4>defaultRowCount = \"&lt;number&gt;\"</h4>\r\n\t<p>\r\n\t\tПозволяет указать значение по умолчанию для свойства <code>take</code> размера страницы списка. По умолчанию равен 20.\r\n\t</p>\r\n\t<aside>\r\n\t\t<p>\r\n\t\t\tАналогично <code>PagedPager</code>, вы можете изменить указанные настройки глобально. Для этого необходимо импортировать\r\n\t\t\tсервис <code>BufferedPager</code> из библиотеки <code>right-angled</code> и установить одноименные значения в статическом\r\n\t\t\tобъекте <code>settings</code>.\r\n\t\t</p>\r\n\t\t<rt-demo-tab-section>\r\n\t\t\t<rt-demo-code-tab url=\"%2Bpaging-and-state/global-configuration/app.component.buffered.ts\">\r\n\t\t\t</rt-demo-code-tab>\r\n\t\t</rt-demo-tab-section>\r\n\t</aside>\r\n\t<h4>canLoadMore</h4>\r\n\t<p>\r\n\t\tВозвращает <code>true</code> если загружены не все записи и можно догрузить еще.\r\n\t</p>\r\n</section>\r\n<section id=\"buffered-directives\">\r\n\t<h3>Additional buffered pager directives</h3>\r\n\t<h4>rtLoadMore</h4>\r\n\t<p>\r\n\t\tВыполняет подгрузку следующего набора записей buffered списка при клике по элементу, если это возможно.\r\n\t</p>\r\n\t<h4>rtRowCount</h4>\r\n\t<p>\r\n\t\tЭлемент <code>input</code> помеченный данной директивой получает функциональность изменения параметра <code>take</code>.\r\n\t\tВводимые значения ограничиваются рядом правил. Например, нельзя указать значение большее, чем\r\n\t\t<a target=\"_blank\" href=\"http://fshchudlo.github.io/e2e4/classes/bufferedpager.html#maxrowcount\">maxRowCount</a>.\r\n\t</p>\r\n\t<p>\r\n\t\tТак же по нажатию клавиши <code>Enter</code> на данном элементе будет выполняться подгрузка следующего фрагмента данных.\r\n\t</p>\r\n\t<p>\r\n\t\tНиже вы можете увидеть реализацию buffered pager-а и живое демо использующего его списка его работы.\r\n\t</p>\r\n\t<aside>\r\n\t\t<p>\r\n\t\t\tКак и в случае paged pager, шаблон выглядит несколько жутко и лучше бы реализовать отдельные компоненты-кнопки, вместо вызова\r\n\t\t\tметодов pager-а прямо в шаблоне. Но такой подход с проще с точки зрения демонстрации возможностей фреймворка.\r\n\t\t</p>\r\n\t</aside>\r\n\t<rt-demo-tab-section>\r\n\t\t<rt-demo-sample-tab>\r\n\t\t\t<rt-demo-reusable-buffered-sample></rt-demo-reusable-buffered-sample>\r\n\t\t</rt-demo-sample-tab>\r\n\t\t<rt-demo-code-tab url=\"shared/footers/buffered-footer.component/buffered-footer.component.html\">\r\n\t\t</rt-demo-code-tab>\r\n\t\t<rt-demo-code-tab url=\"shared/footers/buffered-footer.component/buffered-footer.component.ts\">\r\n\t\t</rt-demo-code-tab>\r\n\t</rt-demo-tab-section>\r\n</section>"

/***/ },

/***/ "./src/app/+paging-and-state/paging-and-state.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var PagingAndStateComponent = (function () {
    function PagingAndStateComponent() {
    }
    PagingAndStateComponent = __decorate([
        core_1.Component({
            template: __webpack_require__("./src/app/+paging-and-state/paging-and-state.component.html")
        }), 
        __metadata('design:paramtypes', [])
    ], PagingAndStateComponent);
    return PagingAndStateComponent;
}());
exports.PagingAndStateComponent = PagingAndStateComponent;


/***/ },

/***/ "./src/app/+paging-and-state/paging-and-state.module.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var common_1 = __webpack_require__("./node_modules/@angular/common/index.js");
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var shared_module_1 = __webpack_require__("./src/app/shared/shared.module.ts");
var paging_and_state_component_1 = __webpack_require__("./src/app/+paging-and-state/paging-and-state.component.ts");
var paging_and_state_routes_1 = __webpack_require__("./src/app/+paging-and-state/paging-and-state.routes.ts");
var reusable_buffered_sample_component_1 = __webpack_require__("./src/app/+paging-and-state/reusable-buffered-sample/reusable-buffered-sample.component.ts");
var reusable_paged_sample_component_1 = __webpack_require__("./src/app/+paging-and-state/reusable-paged-sample/reusable-paged-sample.component.ts");
var state_components_component_1 = __webpack_require__("./src/app/+paging-and-state/state-components/state-components.component.ts");
var PagingAndStateModule = (function () {
    function PagingAndStateModule() {
    }
    PagingAndStateModule = __decorate([
        core_1.NgModule({
            declarations: [reusable_buffered_sample_component_1.ReusableBufferedListSampleComponent, reusable_paged_sample_component_1.ReusablePagedListSampleComponent, paging_and_state_component_1.PagingAndStateComponent, state_components_component_1.StateComponentsComponent],
            exports: [reusable_buffered_sample_component_1.ReusableBufferedListSampleComponent, reusable_paged_sample_component_1.ReusablePagedListSampleComponent, paging_and_state_component_1.PagingAndStateComponent, state_components_component_1.StateComponentsComponent],
            imports: [common_1.CommonModule, router_1.RouterModule.forChild(paging_and_state_routes_1.PagingAndStatesRoutes), shared_module_1.SharedModule]
        }), 
        __metadata('design:paramtypes', [])
    ], PagingAndStateModule);
    return PagingAndStateModule;
}());
exports.PagingAndStateModule = PagingAndStateModule;


/***/ },

/***/ "./src/app/+paging-and-state/paging-and-state.routes.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var paging_and_state_component_1 = __webpack_require__("./src/app/+paging-and-state/paging-and-state.component.ts");
exports.PagingAndStatesRoutes = [
    {
        component: paging_and_state_component_1.PagingAndStateComponent,
        path: ''
    }
];


/***/ },

/***/ "./src/app/+paging-and-state/reusable-buffered-sample/reusable-buffered-sample.component.html":
/***/ function(module, exports) {

module.exports = "<div class=\"table-responsive\">\r\n  <table class=\"table table-striped\" [rtList]=\"loadData\" #list=\"rtList\">\r\n    <thead>\r\n      <tr>\r\n        <th class=\"t-col-iata-code\">IATA</th>\r\n        <th class=\"t-col-airport-name\">Airport name</th>\r\n        <th class=\"t-col-city-name\">City</th>\r\n        <th class=\"t-col-country-name\">Country</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody rtSelectionArea>\r\n      <tr *ngFor=\"let airport of list.items\" [class.selected]=\"rts.selected\" [rtSelectable]=\"airport\" #rts=\"rtSelectable\">\r\n        <td>{{airport.iataCode}}</td>\r\n        <td>{{airport.name}}</td>\r\n        <td>{{airport.cityName}}</td>\r\n        <td>{{airport.countryName}}</td>\r\n      </tr>\r\n    </tbody>\r\n    <tfoot>\r\n      <tr>\r\n        <td colspan=\"4\">\r\n          <rt-demo-buffered-footer></rt-demo-buffered-footer>\r\n        </td>\r\n      </tr>\r\n    </tfoot>\r\n  </table>\r\n</div>"

/***/ },

/***/ "./src/app/+paging-and-state/reusable-buffered-sample/reusable-buffered-sample.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var shared_1 = __webpack_require__("./src/app/shared/index.ts");
var ReusableBufferedListSampleComponent = (function () {
    function ReusableBufferedListSampleComponent(airportsService) {
        var _this = this;
        this.airportsService = airportsService;
        this.loadData = function (requestParams) {
            return _this.airportsService.getAirportsPagedList(requestParams);
        };
        this.airportsService = airportsService;
    }
    ReusableBufferedListSampleComponent = __decorate([
        core_1.Component({
            selector: 'rt-demo-reusable-buffered-sample',
            template: __webpack_require__("./src/app/+paging-and-state/reusable-buffered-sample/reusable-buffered-sample.component.html")
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof shared_1.AirportsService !== 'undefined' && shared_1.AirportsService) === 'function' && _a) || Object])
    ], ReusableBufferedListSampleComponent);
    return ReusableBufferedListSampleComponent;
    var _a;
}());
exports.ReusableBufferedListSampleComponent = ReusableBufferedListSampleComponent;


/***/ },

/***/ "./src/app/+paging-and-state/reusable-paged-sample/reusable-paged-sample.component.html":
/***/ function(module, exports) {

module.exports = "<div class=\"table-responsive\">\r\n  <table class=\"table table-striped\" [rtList]=\"loadData\" #list=\"rtList\">\r\n    <thead>\r\n      <tr>\r\n        <th class=\"t-col-iata-code\">IATA</th>\r\n        <th class=\"t-col-airport-name\">Airport name</th>\r\n        <th class=\"t-col-city-name\">City</th>\r\n        <th class=\"t-col-country-name\">Country</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody rtSelectionArea>\r\n      <tr *ngFor=\"let airport of list.items\" [class.selected]=\"rts.selected\" [rtSelectable]=\"airport\" #rts=\"rtSelectable\">\r\n        <td>{{airport.iataCode}}</td>\r\n        <td>{{airport.name}}</td>\r\n        <td>{{airport.cityName}}</td>\r\n        <td>{{airport.countryName}}</td>\r\n      </tr>\r\n    </tbody>\r\n    <tfoot>\r\n      <tr>\r\n        <td colspan=\"4\">\r\n          <rt-demo-paged-footer></rt-demo-paged-footer>\r\n        </td>\r\n      </tr>\r\n    </tfoot>\r\n  </table>\r\n</div>"

/***/ },

/***/ "./src/app/+paging-and-state/reusable-paged-sample/reusable-paged-sample.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var shared_1 = __webpack_require__("./src/app/shared/index.ts");
var ReusablePagedListSampleComponent = (function () {
    function ReusablePagedListSampleComponent(airportsService) {
        var _this = this;
        this.airportsService = airportsService;
        this.loadData = function (requestParams) {
            return _this.airportsService.getAirportsPagedList(requestParams);
        };
        this.airportsService = airportsService;
    }
    ReusablePagedListSampleComponent = __decorate([
        core_1.Component({
            selector: 'rt-demo-reusable-paged-sample',
            template: __webpack_require__("./src/app/+paging-and-state/reusable-paged-sample/reusable-paged-sample.component.html")
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof shared_1.AirportsService !== 'undefined' && shared_1.AirportsService) === 'function' && _a) || Object])
    ], ReusablePagedListSampleComponent);
    return ReusablePagedListSampleComponent;
    var _a;
}());
exports.ReusablePagedListSampleComponent = ReusablePagedListSampleComponent;


/***/ },

/***/ "./src/app/+paging-and-state/state-components/state-components.component.html":
/***/ function(module, exports) {

module.exports = "<div class=\"toolbar\">\r\n\t<ul>\r\n\t\t<li>\r\n\t\t\t<button (click)=\"list.loadData()\" [disabled]=\"list.busy\" type=\"button\" class=\"btn btn-primary\">Load data</button>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<button (click)=\"list.cancelRequests()\" [disabled]=\"list.ready\" type=\"button\" class=\"btn btn-primary\">Cancel loading</button>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<button type=\"button\" class=\"btn btn-primary\" (click)=\"raiseErrorOnLoad()\">Raise error on load</button>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<button type=\"button\" class=\"btn btn-primary\" (click)=\"loadEmptyData()\">Load empty list</button>\r\n\t\t</li>\r\n\t</ul>\r\n</div>\r\n<div class=\"table-responsive\">\r\n\t<table class=\"table table-striped\" [rtList]=\"loadData\" [loadOnInit]=\"false\" #list=\"rtList\">\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<th><span rtSort=\"iataCode\">IATA</span></th>\r\n\t\t\t\t<th><span rtSort=\"name\">Airport name</span></th>\r\n\t\t\t\t<th><span rtSort=\"countryName\">Country</span></th>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody>\r\n\t\t\t<tr *ngFor=\"let airport of list.items\">\r\n\t\t\t\t<td>{{airport.iataCode}}</td>\r\n\t\t\t\t<td>{{airport.name}}</td>\r\n\t\t\t\t<td>{{airport.countryName}}</td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t\t<tfoot>\r\n\t\t\t<tr>\r\n\t\t\t\t<td colspan=\"3\">\r\n\t\t\t\t\t<rt-list-state-initial>\r\n\t\t\t\t\t\tПока ничего не произошло. Нажмите любую из кнопок вверху\r\n\t\t\t\t\t</rt-list-state-initial>\r\n\t\t\t\t\t<!-- Вы будете видеть это сообщение пока выполняется загрузка данных. -->\r\n\t\t\t\t\t<rt-list-state-progress>\r\n\t\t\t\t\t\tЗагружаю данные...\r\n\t\t\t\t\t</rt-list-state-progress>\r\n\t\t\t\t\t<!-- Вы увидите это сообщение если запрос не вернет данные. -->\r\n\t\t\t\t\t<rt-list-state-no-data>\r\n\t\t\t\t\t\tДанные не найдены\r\n\t\t\t\t\t</rt-list-state-no-data>\r\n\t\t\t\t\t<!-- Вы увидите это сообщение если нажмете кнопку \"отменить запрос\" когда он будет выполняться. -->\r\n\t\t\t\t\t<rt-list-state-request-cancelled>\r\n\t\t\t\t\t\tЗапрос был отменен\r\n\t\t\t\t\t</rt-list-state-request-cancelled>\r\n\t\t\t\t\t<!-- Вы увидите это сообщение если нажмете кнопку \"Raise error on load\". -->\r\n\t\t\t\t\t<rt-list-state-failed>\r\n\t\t\t\t\t\tПри запросе данных произошла ошибка\r\n\t\t\t\t\t</rt-list-state-failed>\r\n\t\t\t\t\t<!-- Вы увидите это сообщение если нажмете кнопку \"загрузить данные\". -->\r\n\t\t\t\t\t<rt-list-state-done>\r\n\t\t\t\t\t\tДанные успешно загружены\r\n\t\t\t\t\t</rt-list-state-done>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t</tfoot>\r\n\t</table>\r\n</div>"

/***/ },

/***/ "./src/app/+paging-and-state/state-components/state-components.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var right_angled_1 = __webpack_require__("./node_modules/right-angled/index.js");
var shared_1 = __webpack_require__("./src/app/shared/index.ts");
var StateComponentsComponent = (function () {
    function StateComponentsComponent(airportsService) {
        var _this = this;
        this.airportsService = airportsService;
        this.raiseError = false;
        this.returnNoData = false;
        this.loadData = function (requestParams) {
            return _this.airportsService.getAirportsList(requestParams).map(function (response) {
                if (_this.raiseError) {
                    _this.raiseError = false;
                    throw new Error('Error!!!');
                }
                if (_this.returnNoData) {
                    _this.returnNoData = false;
                    return [];
                }
                return response;
            });
        };
    }
    StateComponentsComponent.prototype.loadEmptyData = function () {
        this.returnNoData = true;
        this.listDirective.reloadData();
    };
    ;
    StateComponentsComponent.prototype.raiseErrorOnLoad = function () {
        this.raiseError = true;
        this.listDirective.reloadData();
    };
    ;
    __decorate([
        core_1.ViewChild(right_angled_1.ListDirective), 
        __metadata('design:type', (typeof (_a = typeof right_angled_1.ListDirective !== 'undefined' && right_angled_1.ListDirective) === 'function' && _a) || Object)
    ], StateComponentsComponent.prototype, "listDirective", void 0);
    StateComponentsComponent = __decorate([
        core_1.Component({
            selector: 'rt-demo-state-components',
            template: __webpack_require__("./src/app/+paging-and-state/state-components/state-components.component.html")
        }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof shared_1.AirportsService !== 'undefined' && shared_1.AirportsService) === 'function' && _b) || Object])
    ], StateComponentsComponent);
    return StateComponentsComponent;
    var _a, _b;
}());
exports.StateComponentsComponent = StateComponentsComponent;


/***/ },

/***/ "./src/compiled/src/app/+paging-and-state/paging-and-state.component.ngfactory.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var import0 = __webpack_require__("./src/app/+paging-and-state/paging-and-state.component.ts");
var import1 = __webpack_require__("./node_modules/@angular/core/src/linker/view.js");
var import3 = __webpack_require__("./node_modules/@angular/core/src/linker/element.js");
var import4 = __webpack_require__("./node_modules/@angular/core/src/linker/view_utils.js");
var import6 = __webpack_require__("./node_modules/@angular/core/src/linker/view_type.js");
var import7 = __webpack_require__("./node_modules/@angular/core/src/change_detection/change_detection.js");
var import8 = __webpack_require__("./node_modules/@angular/core/src/metadata/view.js");
var import9 = __webpack_require__("./node_modules/@angular/core/src/linker/component_factory.js");
var import10 = __webpack_require__("./src/app/shared/tab/tab-section.component.ts");
var import11 = __webpack_require__("./src/compiled/src/app/shared/tab/tab-section.component.ngfactory.ts");
var import12 = __webpack_require__("./src/app/shared/tab/code-tab.component.ts");
var import13 = __webpack_require__("./src/compiled/src/app/shared/tab/code-tab.component.ngfactory.ts");
var import14 = __webpack_require__("./src/app/shared/tab/sample-tab.component.ts");
var import15 = __webpack_require__("./src/compiled/src/app/shared/tab/sample-tab.component.ngfactory.ts");
var import16 = __webpack_require__("./src/app/+paging-and-state/state-components/state-components.component.ts");
var import17 = __webpack_require__("./src/compiled/src/app/+paging-and-state/state-components/state-components.component.ngfactory.ts");
var import18 = __webpack_require__("./src/app/+paging-and-state/reusable-buffered-sample/reusable-buffered-sample.component.ts");
var import19 = __webpack_require__("./src/compiled/src/app/+paging-and-state/reusable-buffered-sample/reusable-buffered-sample.component.ngfactory.ts");
var import20 = __webpack_require__("./node_modules/@angular/http/src/http.js");
var import21 = __webpack_require__("./node_modules/@angular/core/src/linker/element_ref.js");
var import22 = __webpack_require__("./src/app/shared/data/airports.service.ts");
var Wrapper_PagingAndStateComponent = (function () {
    function Wrapper_PagingAndStateComponent() {
        this._changed = false;
        this.context = new import0.PagingAndStateComponent();
    }
    Wrapper_PagingAndStateComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_PagingAndStateComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_PagingAndStateComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_PagingAndStateComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_PagingAndStateComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_PagingAndStateComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_PagingAndStateComponent;
}());
exports.Wrapper_PagingAndStateComponent = Wrapper_PagingAndStateComponent;
var renderType_PagingAndStateComponent_Host = null;
var _View_PagingAndStateComponent_Host0 = (function (_super) {
    __extends(_View_PagingAndStateComponent_Host0, _super);
    function _View_PagingAndStateComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_PagingAndStateComponent_Host0, renderType_PagingAndStateComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_PagingAndStateComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer, 'ng-component', import4.EMPTY_INLINE_ARRAY, rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        this.compView_0 = viewFactory_PagingAndStateComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._PagingAndStateComponent_0_4 = new Wrapper_PagingAndStateComponent();
        this._appEl_0.initComponent(this._PagingAndStateComponent_0_4.context, this.compView_0);
        this.compView_0.create(this._PagingAndStateComponent_0_4.context, null);
        this.init(this._el_0, [this._el_0], null);
        return this._appEl_0;
    };
    _View_PagingAndStateComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.PagingAndStateComponent) && (0 === requestNodeIndex))) {
            return this._PagingAndStateComponent_0_4.context;
        }
        return notFoundResult;
    };
    _View_PagingAndStateComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._PagingAndStateComponent_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    _View_PagingAndStateComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    _View_PagingAndStateComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return _View_PagingAndStateComponent_Host0;
}(import1.AppView));
function viewFactory_PagingAndStateComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_PagingAndStateComponent_Host === null)) {
        (renderType_PagingAndStateComponent_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_PagingAndStateComponent_Host0(viewUtils, parentInjector, declarationEl);
}
exports.PagingAndStateComponentNgFactory = new import9.ComponentFactory('ng-component', viewFactory_PagingAndStateComponent_Host0, import0.PagingAndStateComponent);
var styles_PagingAndStateComponent = [];
var renderType_PagingAndStateComponent = null;
var _View_PagingAndStateComponent0 = (function (_super) {
    __extends(_View_PagingAndStateComponent0, _super);
    function _View_PagingAndStateComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_PagingAndStateComponent0, renderType_PagingAndStateComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_PagingAndStateComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = import4.createRenderElement(this.renderer, parentRenderNode, 'h2', import4.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, 'Paging and lists state', null);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_3 = import4.createRenderElement(this.renderer, parentRenderNode, 'h3', import4.EMPTY_INLINE_ARRAY, null);
        this._text_4 = this.renderer.createText(this._el_3, 'Table of contents', null);
        this._text_5 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_6 = import4.createRenderElement(this.renderer, parentRenderNode, 'ul', new import4.InlineArray2(2, 'class', 'agenda'), null);
        this._text_7 = this.renderer.createText(this._el_6, '\n	', null);
        this._el_8 = import4.createRenderElement(this.renderer, this._el_6, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._el_9 = import4.createRenderElement(this.renderer, this._el_8, 'a', new import4.InlineArray2(2, 'href', 'paging-and-state#common-idea'), null);
        this._text_10 = this.renderer.createText(this._el_9, 'Общая идея', null);
        this._text_11 = this.renderer.createText(this._el_6, '\n	', null);
        this._el_12 = import4.createRenderElement(this.renderer, this._el_6, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._el_13 = import4.createRenderElement(this.renderer, this._el_12, 'a', new import4.InlineArray2(2, 'href', 'paging-and-state#bootstrap'), null);
        this._text_14 = this.renderer.createText(this._el_13, 'Как подключить', null);
        this._text_15 = this.renderer.createText(this._el_6, '\n	', null);
        this._el_16 = import4.createRenderElement(this.renderer, this._el_6, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._el_17 = import4.createRenderElement(this.renderer, this._el_16, 'a', new import4.InlineArray2(2, 'href', 'paging-and-state#state-components'), null);
        this._text_18 = this.renderer.createText(this._el_17, 'Компоненты состояния', null);
        this._text_19 = this.renderer.createText(this._el_6, '\n	', null);
        this._el_20 = import4.createRenderElement(this.renderer, this._el_6, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._text_21 = this.renderer.createText(this._el_20, '\n		', null);
        this._el_22 = import4.createRenderElement(this.renderer, this._el_20, 'a', new import4.InlineArray2(2, 'href', 'paging-and-state#paged-pager'), null);
        this._text_23 = this.renderer.createText(this._el_22, 'Использование ', null);
        this._el_24 = import4.createRenderElement(this.renderer, this._el_22, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_25 = this.renderer.createText(this._el_24, 'rt-paged-pager', null);
        this._text_26 = this.renderer.createText(this._el_22, ' component', null);
        this._text_27 = this.renderer.createText(this._el_20, '\n	', null);
        this._text_28 = this.renderer.createText(this._el_6, '\n	', null);
        this._el_29 = import4.createRenderElement(this.renderer, this._el_6, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._text_30 = this.renderer.createText(this._el_29, '\n		', null);
        this._el_31 = import4.createRenderElement(this.renderer, this._el_29, 'a', new import4.InlineArray2(2, 'href', 'paging-and-state#paged-directives'), null);
        this._text_32 = this.renderer.createText(this._el_31, 'Additional paged pager directives', null);
        this._text_33 = this.renderer.createText(this._el_29, '\n	', null);
        this._text_34 = this.renderer.createText(this._el_6, '\n	', null);
        this._el_35 = import4.createRenderElement(this.renderer, this._el_6, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._text_36 = this.renderer.createText(this._el_35, '\n		', null);
        this._el_37 = import4.createRenderElement(this.renderer, this._el_35, 'a', new import4.InlineArray2(2, 'href', 'paging-and-state#buffered-pager'), null);
        this._text_38 = this.renderer.createText(this._el_37, 'Использование ', null);
        this._el_39 = import4.createRenderElement(this.renderer, this._el_37, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_40 = this.renderer.createText(this._el_39, 'rt-buffered-pager', null);
        this._text_41 = this.renderer.createText(this._el_37, ' component', null);
        this._text_42 = this.renderer.createText(this._el_35, '\n	', null);
        this._text_43 = this.renderer.createText(this._el_6, '\n	', null);
        this._el_44 = import4.createRenderElement(this.renderer, this._el_6, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._text_45 = this.renderer.createText(this._el_44, '\n		', null);
        this._el_46 = import4.createRenderElement(this.renderer, this._el_44, 'a', new import4.InlineArray2(2, 'href', 'paging-and-state#buffered-directives'), null);
        this._text_47 = this.renderer.createText(this._el_46, 'Additional buffered pager directives', null);
        this._text_48 = this.renderer.createText(this._el_44, '\n	', null);
        this._text_49 = this.renderer.createText(this._el_6, '\n', null);
        this._text_50 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_51 = import4.createRenderElement(this.renderer, parentRenderNode, 'section', new import4.InlineArray2(2, 'id', 'common-idea'), null);
        this._text_52 = this.renderer.createText(this._el_51, '\n	', null);
        this._el_53 = import4.createRenderElement(this.renderer, this._el_51, 'aside', import4.EMPTY_INLINE_ARRAY, null);
        this._text_54 = this.renderer.createText(this._el_53, '\n		', null);
        this._el_55 = import4.createRenderElement(this.renderer, this._el_53, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_56 = this.renderer.createText(this._el_55, '\n			В примерах данного раздела мы используем полноценные списки, чтобы их было привычнее воспринимать. Но все интересное и касающееся\n			данного раздела будет происходить исключительно в элементе ', null);
        this._el_57 = import4.createRenderElement(this.renderer, this._el_55, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_58 = this.renderer.createText(this._el_57, 'tfoot', null);
        this._text_59 = this.renderer.createText(this._el_55, ' в шаблоне.\n		', null);
        this._text_60 = this.renderer.createText(this._el_53, '\n	', null);
        this._text_61 = this.renderer.createText(this._el_51, '\n\n\n	', null);
        this._el_62 = import4.createRenderElement(this.renderer, this._el_51, 'h3', import4.EMPTY_INLINE_ARRAY, null);
        this._text_63 = this.renderer.createText(this._el_62, 'Общая идея', null);
        this._text_64 = this.renderer.createText(this._el_51, '\n	', null);
        this._el_65 = import4.createRenderElement(this.renderer, this._el_51, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_66 = this.renderer.createText(this._el_65, '\n		Для работы с paging в нашей библиотеке реализовано множество небольших контролов, ни один из которых не влияет на стили вашего\n		конечного приложения. Идея заключается в том, что вы можете самостоятельно собрать нужный вам пейджер с нужной вам версткой,\n		стилями и функционалом.\n	', null);
        this._text_67 = this.renderer.createText(this._el_51, '\n	', null);
        this._el_68 = import4.createRenderElement(this.renderer, this._el_51, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_69 = this.renderer.createText(this._el_68, '\n\n		Так же вы легко можете реализовать свои контролы. Для этого необходимо заинжектить в конструктор сервис ', null);
        this._el_70 = import4.createRenderElement(this.renderer, this._el_68, 'a', new import4.InlineArray4(4, 'href', 'https://fshchudlo.github.io/e2e4/classes/pagedpager.html', 'target', '_blank'), null);
        this._text_71 = this.renderer.createText(this._el_70, 'PagedPager', null);
        this._text_72 = this.renderer.createText(this._el_68, ' либо ', null);
        this._el_73 = import4.createRenderElement(this.renderer, this._el_68, 'a', new import4.InlineArray4(4, 'href', 'https://fshchudlo.github.io/e2e4/classes/bufferedpager.html', 'target', '_blank'), null);
        this._text_74 = this.renderer.createText(this._el_73, 'BufferedPager', null);
        this._text_75 = this.renderer.createText(this._el_68, '		и разместить реализованные контролы внутри соответствующего компонента (', null);
        this._el_76 = import4.createRenderElement(this.renderer, this._el_68, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_77 = this.renderer.createText(this._el_76, 'rt-paged-pager', null);
        this._text_78 = this.renderer.createText(this._el_68, ' либо ', null);
        this._el_79 = import4.createRenderElement(this.renderer, this._el_68, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_80 = this.renderer.createText(this._el_79, 'rt-buffered-pager', null);
        this._text_81 = this.renderer.createText(this._el_68, ')\n	', null);
        this._text_82 = this.renderer.createText(this._el_51, '\n	', null);
        this._el_83 = import4.createRenderElement(this.renderer, this._el_51, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_84 = this.renderer.createText(this._el_83, '\n		Ниже мы перечислим все имеющиеся компоненты и директивы, касающиеся paging-а и отображения состояния списка. В конце мы представим\n		варианты собранных pagers для paged и buffered списков.\n	', null);
        this._text_85 = this.renderer.createText(this._el_51, '\n', null);
        this._text_86 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_87 = import4.createRenderElement(this.renderer, parentRenderNode, 'section', new import4.InlineArray2(2, 'id', 'bootstrap'), null);
        this._text_88 = this.renderer.createText(this._el_87, '\n	', null);
        this._el_89 = import4.createRenderElement(this.renderer, this._el_87, 'h3', import4.EMPTY_INLINE_ARRAY, null);
        this._text_90 = this.renderer.createText(this._el_89, 'Как подключить', null);
        this._text_91 = this.renderer.createText(this._el_87, '\n	', null);
        this._el_92 = import4.createRenderElement(this.renderer, this._el_87, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_93 = this.renderer.createText(this._el_92, '\n		Для работы со списками необходимо импортировать модуль ', null);
        this._el_94 = import4.createRenderElement(this.renderer, this._el_92, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_95 = this.renderer.createText(this._el_94, 'RTListsModule', null);
        this._text_96 = this.renderer.createText(this._el_92, ' и подключить его в вашем ', null);
        this._el_97 = import4.createRenderElement(this.renderer, this._el_92, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_98 = this.renderer.createText(this._el_97, 'AppModule', null);
        this._text_99 = this.renderer.createText(this._el_92, '.\n		Так же вы можете импортировать модуль ', null);
        this._el_100 = import4.createRenderElement(this.renderer, this._el_92, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_101 = this.renderer.createText(this._el_100, 'RtModule', null);
        this._text_102 = this.renderer.createText(this._el_92, ', включающий в себя функционал всей библиотеки ', null);
        this._el_103 = import4.createRenderElement(this.renderer, this._el_92, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_104 = this.renderer.createText(this._el_103, 'right-angled', null);
        this._text_105 = this.renderer.createText(this._el_92, '		целиком.\n	', null);
        this._text_106 = this.renderer.createText(this._el_87, '\n	', null);
        this._el_107 = import4.createRenderElement(this.renderer, this._el_87, 'rt-demo-tab-section', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_107 = new import3.AppElement(107, 87, this, this._el_107);
        this.compView_107 = import11.viewFactory_TabSectionComponent0(this.viewUtils, this.injector(107), this._appEl_107);
        this._TabSectionComponent_107_4 = new import11.Wrapper_TabSectionComponent();
        this._appEl_107.initComponent(this._TabSectionComponent_107_4.context, this.compView_107);
        this._text_108 = this.renderer.createText(null, '\n		', null);
        this._el_109 = import4.createRenderElement(this.renderer, null, 'rt-demo-code-tab', new import4.InlineArray2(2, 'url', '%2Bpaging-and-state/bootstrap/app.module.tsfake'), null);
        this._appEl_109 = new import3.AppElement(109, 107, this, this._el_109);
        this.compView_109 = import13.viewFactory_CodeTabComponent0(this.viewUtils, this.injector(109), this._appEl_109);
        this._CodeTabComponent_109_4 = new import13.Wrapper_CodeTabComponent(this._TabSectionComponent_107_4.context, this.parentInjector.get(import20.Http), new import21.ElementRef(this._el_109));
        this._appEl_109.initComponent(this._CodeTabComponent_109_4.context, this.compView_109);
        this._text_110 = this.renderer.createText(null, '\n		', null);
        this.compView_109.create(this._CodeTabComponent_109_4.context, null);
        this._text_111 = this.renderer.createText(null, '\n	', null);
        this.compView_107.create(this._TabSectionComponent_107_4.context, null);
        this._text_112 = this.renderer.createText(this._el_87, '\n', null);
        this._text_113 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_114 = import4.createRenderElement(this.renderer, parentRenderNode, 'section', new import4.InlineArray2(2, 'id', 'state-components'), null);
        this._text_115 = this.renderer.createText(this._el_114, '\n	', null);
        this._el_116 = import4.createRenderElement(this.renderer, this._el_114, 'h3', import4.EMPTY_INLINE_ARRAY, null);
        this._text_117 = this.renderer.createText(this._el_116, 'Компоненты состояния', null);
        this._text_118 = this.renderer.createText(this._el_114, '\n	', null);
        this._el_119 = import4.createRenderElement(this.renderer, this._el_114, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_120 = this.renderer.createText(this._el_119, '\n		Суть данного набора компонентов проста: каждый из них является контейнером для контента, который необходимо отображать только\n		когда список находится в одном из возможных состояний ', null);
        this._el_121 = import4.createRenderElement(this.renderer, this._el_119, 'a', new import4.InlineArray4(4, 'href', 'http://fshchudlo.github.io/e2e4/enums/progressstate.html', 'target', '_blank'), null);
        this._text_122 = this.renderer.createText(this._el_121, 'ProgressState', null);
        this._text_123 = this.renderer.createText(this._el_119, '.\n	', null);
        this._text_124 = this.renderer.createText(this._el_114, '\n	', null);
        this._el_125 = import4.createRenderElement(this.renderer, this._el_114, 'ul', new import4.InlineArray2(2, 'class', 'bulleted'), null);
        this._text_126 = this.renderer.createText(this._el_125, '\n		', null);
        this._el_127 = import4.createRenderElement(this.renderer, this._el_125, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._el_128 = import4.createRenderElement(this.renderer, this._el_127, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_129 = this.renderer.createText(this._el_128, 'rt-list-state-initial', null);
        this._text_130 = this.renderer.createText(this._el_127, ' - отображает внутреннее содержимое пока не выполнено ни одного запроса', null);
        this._text_131 = this.renderer.createText(this._el_125, '\n		', null);
        this._el_132 = import4.createRenderElement(this.renderer, this._el_125, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._el_133 = import4.createRenderElement(this.renderer, this._el_132, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_134 = this.renderer.createText(this._el_133, 'rt-list-state-progress', null);
        this._text_135 = this.renderer.createText(this._el_132, ' - отображает внутреннее содержимое пока выполняется запрос данных. Идеально подходит\n			для отображения progress bar', null);
        this._text_136 = this.renderer.createText(this._el_125, '\n		', null);
        this._el_137 = import4.createRenderElement(this.renderer, this._el_125, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._el_138 = import4.createRenderElement(this.renderer, this._el_137, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_139 = this.renderer.createText(this._el_138, 'rt-list-state-no-data', null);
        this._text_140 = this.renderer.createText(this._el_137, ' - отображает внутреннее содержимое, когда запрос выполнен и возвращено 0 записей', null);
        this._text_141 = this.renderer.createText(this._el_125, '\n		', null);
        this._el_142 = import4.createRenderElement(this.renderer, this._el_125, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._el_143 = import4.createRenderElement(this.renderer, this._el_142, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_144 = this.renderer.createText(this._el_143, 'rt-list-state-request-cancelled', null);
        this._text_145 = this.renderer.createText(this._el_142, ' - отображает внутреннее содержимое если запрос был отменен (например, вызовом\n			метода ', null);
        this._el_146 = import4.createRenderElement(this.renderer, this._el_142, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_147 = this.renderer.createText(this._el_146, 'rtList.cancelRequests', null);
        this._text_148 = this.renderer.createText(this._el_142, ')', null);
        this._text_149 = this.renderer.createText(this._el_125, '\n		', null);
        this._el_150 = import4.createRenderElement(this.renderer, this._el_125, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._el_151 = import4.createRenderElement(this.renderer, this._el_150, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_152 = this.renderer.createText(this._el_151, 'rt-list-state-failed', null);
        this._text_153 = this.renderer.createText(this._el_150, ' - отображает внутреннее содержимое если последний запрос закончился с ошибкой', null);
        this._text_154 = this.renderer.createText(this._el_125, '\n		', null);
        this._el_155 = import4.createRenderElement(this.renderer, this._el_125, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._el_156 = import4.createRenderElement(this.renderer, this._el_155, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_157 = this.renderer.createText(this._el_156, 'rt-list-state-done', null);
        this._text_158 = this.renderer.createText(this._el_155, ' - отображает внутреннее содержимое если последний запрос был выполнен без ошибок и были\n			возвращены записи', null);
        this._text_159 = this.renderer.createText(this._el_125, '\n	', null);
        this._text_160 = this.renderer.createText(this._el_114, '\n	', null);
        this._el_161 = import4.createRenderElement(this.renderer, this._el_114, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_162 = this.renderer.createText(this._el_161, '\n		Ниже приведен пример, в элементе ', null);
        this._el_163 = import4.createRenderElement(this.renderer, this._el_161, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_164 = this.renderer.createText(this._el_163, 'tfoot', null);
        this._text_165 = this.renderer.createText(this._el_161, ' которого использованы все 6 компонентов состояний. Нажимая на соответствующие\n		кнопки в тулбаре вы можете увидеть их все.\n	', null);
        this._text_166 = this.renderer.createText(this._el_114, '\n\n	', null);
        this._el_167 = import4.createRenderElement(this.renderer, this._el_114, 'rt-demo-tab-section', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_167 = new import3.AppElement(167, 114, this, this._el_167);
        this.compView_167 = import11.viewFactory_TabSectionComponent0(this.viewUtils, this.injector(167), this._appEl_167);
        this._TabSectionComponent_167_4 = new import11.Wrapper_TabSectionComponent();
        this._appEl_167.initComponent(this._TabSectionComponent_167_4.context, this.compView_167);
        this._text_168 = this.renderer.createText(null, '\n		', null);
        this._el_169 = import4.createRenderElement(this.renderer, null, 'rt-demo-sample-tab', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_169 = new import3.AppElement(169, 167, this, this._el_169);
        this.compView_169 = import15.viewFactory_SampleTabComponent0(this.viewUtils, this.injector(169), this._appEl_169);
        this._SampleTabComponent_169_4 = new import15.Wrapper_SampleTabComponent(this._TabSectionComponent_167_4.context);
        this._appEl_169.initComponent(this._SampleTabComponent_169_4.context, this.compView_169);
        this._text_170 = this.renderer.createText(null, '\n			', null);
        this._el_171 = import4.createRenderElement(this.renderer, null, 'rt-demo-state-components', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_171 = new import3.AppElement(171, 169, this, this._el_171);
        this.compView_171 = import17.viewFactory_StateComponentsComponent0(this.viewUtils, this.injector(171), this._appEl_171);
        this._StateComponentsComponent_171_4 = new import17.Wrapper_StateComponentsComponent(this.parentInjector.get(import22.AirportsService));
        this._appEl_171.initComponent(this._StateComponentsComponent_171_4.context, this.compView_171);
        this.compView_171.create(this._StateComponentsComponent_171_4.context, null);
        this._text_172 = this.renderer.createText(null, '\n		', null);
        this.compView_169.create(this._SampleTabComponent_169_4.context, null);
        this._text_173 = this.renderer.createText(null, '\n		', null);
        this._el_174 = import4.createRenderElement(this.renderer, null, 'rt-demo-code-tab', new import4.InlineArray2(2, 'url', '%2Bpaging-and-state/state-components/state-components.component.html'), null);
        this._appEl_174 = new import3.AppElement(174, 167, this, this._el_174);
        this.compView_174 = import13.viewFactory_CodeTabComponent0(this.viewUtils, this.injector(174), this._appEl_174);
        this._CodeTabComponent_174_4 = new import13.Wrapper_CodeTabComponent(this._TabSectionComponent_167_4.context, this.parentInjector.get(import20.Http), new import21.ElementRef(this._el_174));
        this._appEl_174.initComponent(this._CodeTabComponent_174_4.context, this.compView_174);
        this._text_175 = this.renderer.createText(null, '\n		', null);
        this.compView_174.create(this._CodeTabComponent_174_4.context, null);
        this._text_176 = this.renderer.createText(null, '\n		', null);
        this._el_177 = import4.createRenderElement(this.renderer, null, 'rt-demo-code-tab', new import4.InlineArray2(2, 'url', '%2Bpaging-and-state/state-components/state-components.component.ts'), null);
        this._appEl_177 = new import3.AppElement(177, 167, this, this._el_177);
        this.compView_177 = import13.viewFactory_CodeTabComponent0(this.viewUtils, this.injector(177), this._appEl_177);
        this._CodeTabComponent_177_4 = new import13.Wrapper_CodeTabComponent(this._TabSectionComponent_167_4.context, this.parentInjector.get(import20.Http), new import21.ElementRef(this._el_177));
        this._appEl_177.initComponent(this._CodeTabComponent_177_4.context, this.compView_177);
        this._text_178 = this.renderer.createText(null, '\n		', null);
        this.compView_177.create(this._CodeTabComponent_177_4.context, null);
        this._text_179 = this.renderer.createText(null, '\n	', null);
        this.compView_167.create(this._TabSectionComponent_167_4.context, null);
        this._text_180 = this.renderer.createText(this._el_114, '\n\n', null);
        this._text_181 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_182 = import4.createRenderElement(this.renderer, parentRenderNode, 'section', new import4.InlineArray2(2, 'id', 'paged-pager'), null);
        this._text_183 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_184 = import4.createRenderElement(this.renderer, this._el_182, 'h3', import4.EMPTY_INLINE_ARRAY, null);
        this._text_185 = this.renderer.createText(this._el_184, 'Использование ', null);
        this._el_186 = import4.createRenderElement(this.renderer, this._el_184, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_187 = this.renderer.createText(this._el_186, 'rt-paged-pager', null);
        this._text_188 = this.renderer.createText(this._el_184, ' component', null);
        this._text_189 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_190 = import4.createRenderElement(this.renderer, this._el_182, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_191 = this.renderer.createText(this._el_190, '\n		Прежде всего, чтобы реализовать paged pager, необходимо использовать компонент ', null);
        this._el_192 = import4.createRenderElement(this.renderer, this._el_190, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_193 = this.renderer.createText(this._el_192, 'rt-paged-pager', null);
        this._text_194 = this.renderer.createText(this._el_190, '. Данный компонент\n		регистрирует себя в листе и, таким образом, список получает функциональность paging. Так же данный компонент служит контейнером\n		для целого ряда компонент и директив, при помощи которых реализуется pager.\n	', null);
        this._text_195 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_196 = import4.createRenderElement(this.renderer, this._el_182, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_197 = this.renderer.createText(this._el_196, '\n		Данный компонент имеет следующие методы и свойства:\n	', null);
        this._text_198 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_199 = import4.createRenderElement(this.renderer, this._el_182, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_200 = this.renderer.createText(this._el_199, 'minPageSize = "<number>"', null);
        this._text_201 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_202 = import4.createRenderElement(this.renderer, this._el_182, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_203 = this.renderer.createText(this._el_202, '\n		Позволяет указать минимальное возможное значение для параметра ', null);
        this._el_204 = import4.createRenderElement(this.renderer, this._el_202, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_205 = this.renderer.createText(this._el_204, 'take', null);
        this._text_206 = this.renderer.createText(this._el_202, ' пейджера. По умолчанию равен 1.\n	', null);
        this._text_207 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_208 = import4.createRenderElement(this.renderer, this._el_182, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_209 = this.renderer.createText(this._el_208, 'maxPageSize = "<number>"', null);
        this._text_210 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_211 = import4.createRenderElement(this.renderer, this._el_182, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_212 = this.renderer.createText(this._el_211, '\n		Позволяет указать максимальное возможное значение для параметра ', null);
        this._el_213 = import4.createRenderElement(this.renderer, this._el_211, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_214 = this.renderer.createText(this._el_213, 'take', null);
        this._text_215 = this.renderer.createText(this._el_211, ' пейджера. По умолчанию равен 200.\n	', null);
        this._text_216 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_217 = import4.createRenderElement(this.renderer, this._el_182, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_218 = this.renderer.createText(this._el_217, 'defaultPageSize = "<number>"', null);
        this._text_219 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_220 = import4.createRenderElement(this.renderer, this._el_182, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_221 = this.renderer.createText(this._el_220, '\n		Позволяет указать значение по умолчанию для свойства ', null);
        this._el_222 = import4.createRenderElement(this.renderer, this._el_220, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_223 = this.renderer.createText(this._el_222, 'take', null);
        this._text_224 = this.renderer.createText(this._el_220, ' размера страницы списка. По умолчанию равен 20.\n	', null);
        this._text_225 = this.renderer.createText(this._el_182, '\n\n	', null);
        this._el_226 = import4.createRenderElement(this.renderer, this._el_182, 'aside', import4.EMPTY_INLINE_ARRAY, null);
        this._text_227 = this.renderer.createText(this._el_226, '\n		', null);
        this._el_228 = import4.createRenderElement(this.renderer, this._el_226, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_229 = this.renderer.createText(this._el_228, '\n			Вы так же можете изменить значения ', null);
        this._el_230 = import4.createRenderElement(this.renderer, this._el_228, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_231 = this.renderer.createText(this._el_230, 'minPageSize', null);
        this._text_232 = this.renderer.createText(this._el_228, ', ', null);
        this._el_233 = import4.createRenderElement(this.renderer, this._el_228, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_234 = this.renderer.createText(this._el_233, 'maxPageSize', null);
        this._text_235 = this.renderer.createText(this._el_228, ' и ', null);
        this._el_236 = import4.createRenderElement(this.renderer, this._el_228, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_237 = this.renderer.createText(this._el_236, 'defaultPageSize', null);
        this._text_238 = this.renderer.createText(this._el_228, ' глобально.\n			Для этого необходимо импортировать сервис ', null);
        this._el_239 = import4.createRenderElement(this.renderer, this._el_228, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_240 = this.renderer.createText(this._el_239, 'PagedPager', null);
        this._text_241 = this.renderer.createText(this._el_228, ' из библиотеки ', null);
        this._el_242 = import4.createRenderElement(this.renderer, this._el_228, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_243 = this.renderer.createText(this._el_242, 'right-angled', null);
        this._text_244 = this.renderer.createText(this._el_228, ' и установить\n			значения в статическом объекте ', null);
        this._el_245 = import4.createRenderElement(this.renderer, this._el_228, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_246 = this.renderer.createText(this._el_245, 'settings', null);
        this._text_247 = this.renderer.createText(this._el_228, '.\n		', null);
        this._text_248 = this.renderer.createText(this._el_226, '\n		', null);
        this._el_249 = import4.createRenderElement(this.renderer, this._el_226, 'rt-demo-tab-section', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_249 = new import3.AppElement(249, 226, this, this._el_249);
        this.compView_249 = import11.viewFactory_TabSectionComponent0(this.viewUtils, this.injector(249), this._appEl_249);
        this._TabSectionComponent_249_4 = new import11.Wrapper_TabSectionComponent();
        this._appEl_249.initComponent(this._TabSectionComponent_249_4.context, this.compView_249);
        this._text_250 = this.renderer.createText(null, '\n			', null);
        this._el_251 = import4.createRenderElement(this.renderer, null, 'rt-demo-code-tab', new import4.InlineArray2(2, 'url', '%2Bpaging-and-state/global-configuration/app.component.paged.ts'), null);
        this._appEl_251 = new import3.AppElement(251, 249, this, this._el_251);
        this.compView_251 = import13.viewFactory_CodeTabComponent0(this.viewUtils, this.injector(251), this._appEl_251);
        this._CodeTabComponent_251_4 = new import13.Wrapper_CodeTabComponent(this._TabSectionComponent_249_4.context, this.parentInjector.get(import20.Http), new import21.ElementRef(this._el_251));
        this._appEl_251.initComponent(this._CodeTabComponent_251_4.context, this.compView_251);
        this._text_252 = this.renderer.createText(null, '\n			', null);
        this.compView_251.create(this._CodeTabComponent_251_4.context, null);
        this._text_253 = this.renderer.createText(null, '\n		', null);
        this.compView_249.create(this._TabSectionComponent_249_4.context, null);
        this._text_254 = this.renderer.createText(this._el_226, '\n	', null);
        this._text_255 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_256 = import4.createRenderElement(this.renderer, this._el_182, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_257 = this.renderer.createText(this._el_256, 'goToFirstPage', null);
        this._text_258 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_259 = import4.createRenderElement(this.renderer, this._el_182, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_260 = this.renderer.createText(this._el_259, '\n		Выполняет переход на первую страницу списка, если это возможно.\n	', null);
        this._text_261 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_262 = import4.createRenderElement(this.renderer, this._el_182, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_263 = this.renderer.createText(this._el_262, 'goToPreviousPage', null);
        this._text_264 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_265 = import4.createRenderElement(this.renderer, this._el_182, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_266 = this.renderer.createText(this._el_265, '\n		Выполняет переход на предыдущую страницу списка, если это возможно.\n	', null);
        this._text_267 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_268 = import4.createRenderElement(this.renderer, this._el_182, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_269 = this.renderer.createText(this._el_268, 'goToNextPage', null);
        this._text_270 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_271 = import4.createRenderElement(this.renderer, this._el_182, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_272 = this.renderer.createText(this._el_271, '\n		Выполняет переход на следующую страницу списка, если это возможно.\n	', null);
        this._text_273 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_274 = import4.createRenderElement(this.renderer, this._el_182, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_275 = this.renderer.createText(this._el_274, 'goToLastPage', null);
        this._text_276 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_277 = import4.createRenderElement(this.renderer, this._el_182, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_278 = this.renderer.createText(this._el_277, '\n		Выполняет переход на последнюю страницу списка, если это возможно.\n	', null);
        this._text_279 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_280 = import4.createRenderElement(this.renderer, this._el_182, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_281 = this.renderer.createText(this._el_280, 'canMoveBackward', null);
        this._text_282 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_283 = import4.createRenderElement(this.renderer, this._el_182, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_284 = this.renderer.createText(this._el_283, '\n		Возвращает ', null);
        this._el_285 = import4.createRenderElement(this.renderer, this._el_283, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_286 = this.renderer.createText(this._el_285, 'true', null);
        this._text_287 = this.renderer.createText(this._el_283, ' если возможен переход на страницу назад (т.е. если текущая страница pager-а не первая).\n	', null);
        this._text_288 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_289 = import4.createRenderElement(this.renderer, this._el_182, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_290 = this.renderer.createText(this._el_289, 'canMoveForward', null);
        this._text_291 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_292 = import4.createRenderElement(this.renderer, this._el_182, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_293 = this.renderer.createText(this._el_292, '\n		Возвращает ', null);
        this._el_294 = import4.createRenderElement(this.renderer, this._el_292, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_295 = this.renderer.createText(this._el_294, 'true', null);
        this._text_296 = this.renderer.createText(this._el_292, ' если возможен переход на страницу вперед (т.е. если текущая страница pager-а не последняя).\n	', null);
        this._text_297 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_298 = import4.createRenderElement(this.renderer, this._el_182, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_299 = this.renderer.createText(this._el_298, '\n		Ниже вы можете увидеть реализацию paged pager-а и живое демо использующего его списка его работы.\n	', null);
        this._text_300 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_301 = import4.createRenderElement(this.renderer, this._el_182, 'aside', import4.EMPTY_INLINE_ARRAY, null);
        this._text_302 = this.renderer.createText(this._el_301, '\n		', null);
        this._el_303 = import4.createRenderElement(this.renderer, this._el_301, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_304 = this.renderer.createText(this._el_303, '\n			Шаблон pager-а выглядит несколько жутко и лучше бы реализовать отдельные компоненты-кнопки, вместо вызова методов pager-а\n			прямо в шаблоне. Но такой подход с проще с точки зрения демонстрации возможностей фреймворка.\n		', null);
        this._text_305 = this.renderer.createText(this._el_301, '\n	', null);
        this._text_306 = this.renderer.createText(this._el_182, '\n	', null);
        this._el_307 = import4.createRenderElement(this.renderer, this._el_182, 'rt-demo-tab-section', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_307 = new import3.AppElement(307, 182, this, this._el_307);
        this.compView_307 = import11.viewFactory_TabSectionComponent0(this.viewUtils, this.injector(307), this._appEl_307);
        this._TabSectionComponent_307_4 = new import11.Wrapper_TabSectionComponent();
        this._appEl_307.initComponent(this._TabSectionComponent_307_4.context, this.compView_307);
        this._text_308 = this.renderer.createText(null, '\n		', null);
        this._el_309 = import4.createRenderElement(this.renderer, null, 'rt-demo-sample-tab', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_309 = new import3.AppElement(309, 307, this, this._el_309);
        this.compView_309 = import15.viewFactory_SampleTabComponent0(this.viewUtils, this.injector(309), this._appEl_309);
        this._SampleTabComponent_309_4 = new import15.Wrapper_SampleTabComponent(this._TabSectionComponent_307_4.context);
        this._appEl_309.initComponent(this._SampleTabComponent_309_4.context, this.compView_309);
        this._text_310 = this.renderer.createText(null, '\n			', null);
        this._el_311 = import4.createRenderElement(this.renderer, null, 'rt-demo-reusable-buffered-sample', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_311 = new import3.AppElement(311, 309, this, this._el_311);
        this.compView_311 = import19.viewFactory_ReusableBufferedListSampleComponent0(this.viewUtils, this.injector(311), this._appEl_311);
        this._ReusableBufferedListSampleComponent_311_4 = new import19.Wrapper_ReusableBufferedListSampleComponent(this.parentInjector.get(import22.AirportsService));
        this._appEl_311.initComponent(this._ReusableBufferedListSampleComponent_311_4.context, this.compView_311);
        this.compView_311.create(this._ReusableBufferedListSampleComponent_311_4.context, null);
        this._text_312 = this.renderer.createText(null, '\n		', null);
        this.compView_309.create(this._SampleTabComponent_309_4.context, null);
        this._text_313 = this.renderer.createText(null, '\n		', null);
        this._el_314 = import4.createRenderElement(this.renderer, null, 'rt-demo-code-tab', new import4.InlineArray2(2, 'url', 'shared/footers/buffered-footer.component/buffered-footer.component.html'), null);
        this._appEl_314 = new import3.AppElement(314, 307, this, this._el_314);
        this.compView_314 = import13.viewFactory_CodeTabComponent0(this.viewUtils, this.injector(314), this._appEl_314);
        this._CodeTabComponent_314_4 = new import13.Wrapper_CodeTabComponent(this._TabSectionComponent_307_4.context, this.parentInjector.get(import20.Http), new import21.ElementRef(this._el_314));
        this._appEl_314.initComponent(this._CodeTabComponent_314_4.context, this.compView_314);
        this._text_315 = this.renderer.createText(null, '\n		', null);
        this.compView_314.create(this._CodeTabComponent_314_4.context, null);
        this._text_316 = this.renderer.createText(null, '\n		', null);
        this._el_317 = import4.createRenderElement(this.renderer, null, 'rt-demo-code-tab', new import4.InlineArray2(2, 'url', 'shared/footers/buffered-footer.component/buffered-footer.component.ts'), null);
        this._appEl_317 = new import3.AppElement(317, 307, this, this._el_317);
        this.compView_317 = import13.viewFactory_CodeTabComponent0(this.viewUtils, this.injector(317), this._appEl_317);
        this._CodeTabComponent_317_4 = new import13.Wrapper_CodeTabComponent(this._TabSectionComponent_307_4.context, this.parentInjector.get(import20.Http), new import21.ElementRef(this._el_317));
        this._appEl_317.initComponent(this._CodeTabComponent_317_4.context, this.compView_317);
        this._text_318 = this.renderer.createText(null, '\n		', null);
        this.compView_317.create(this._CodeTabComponent_317_4.context, null);
        this._text_319 = this.renderer.createText(null, '\n	', null);
        this.compView_307.create(this._TabSectionComponent_307_4.context, null);
        this._text_320 = this.renderer.createText(this._el_182, '\n\n', null);
        this._text_321 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_322 = import4.createRenderElement(this.renderer, parentRenderNode, 'section', new import4.InlineArray2(2, 'id', 'paged-directives'), null);
        this._text_323 = this.renderer.createText(this._el_322, '\n	', null);
        this._el_324 = import4.createRenderElement(this.renderer, this._el_322, 'h3', import4.EMPTY_INLINE_ARRAY, null);
        this._text_325 = this.renderer.createText(this._el_324, 'Additional paged pager directives', null);
        this._text_326 = this.renderer.createText(this._el_322, '\n	', null);
        this._el_327 = import4.createRenderElement(this.renderer, this._el_322, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_328 = this.renderer.createText(this._el_327, 'rtPageNumber', null);
        this._text_329 = this.renderer.createText(this._el_322, '\n	', null);
        this._el_330 = import4.createRenderElement(this.renderer, this._el_322, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_331 = this.renderer.createText(this._el_330, '\n		Элемент ', null);
        this._el_332 = import4.createRenderElement(this.renderer, this._el_330, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_333 = this.renderer.createText(this._el_332, 'input', null);
        this._text_334 = this.renderer.createText(this._el_330, ' помеченный данной директивой получает функциональность перехода на другую страницу списка. Вводимые\n		значения ограничиваются рядом правил. Например, нельзя указать значение большее, чем общее число страниц в списке. При\n		нажатии клавиши ', null);
        this._el_335 = import4.createRenderElement(this.renderer, this._el_330, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_336 = this.renderer.createText(this._el_335, 'Enter', null);
        this._text_337 = this.renderer.createText(this._el_330, ' в данном элементе будет выполняться загрузка данных.\n	', null);
        this._text_338 = this.renderer.createText(this._el_322, '\n	', null);
        this._el_339 = import4.createRenderElement(this.renderer, this._el_322, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_340 = this.renderer.createText(this._el_339, 'rtPageSize', null);
        this._text_341 = this.renderer.createText(this._el_322, '\n	', null);
        this._el_342 = import4.createRenderElement(this.renderer, this._el_322, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_343 = this.renderer.createText(this._el_342, '\n		Элемент ', null);
        this._el_344 = import4.createRenderElement(this.renderer, this._el_342, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_345 = this.renderer.createText(this._el_344, 'input', null);
        this._text_346 = this.renderer.createText(this._el_342, ' помеченный данной директивой получает функциональность изменения размера страницы списка. Вводимые\n		значения ограничиваются рядом правил. Например, нельзя указать значение большее, чем\n		', null);
        this._el_347 = import4.createRenderElement(this.renderer, this._el_342, 'a', new import4.InlineArray4(4, 'href', 'http://fshchudlo.github.io/e2e4/classes/pagedpager.html#maxpagesize', 'target', '_blank'), null);
        this._text_348 = this.renderer.createText(this._el_347, 'maxPageSize', null);
        this._text_349 = this.renderer.createText(this._el_342, '. При нажатии\n		клавиши ', null);
        this._el_350 = import4.createRenderElement(this.renderer, this._el_342, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_351 = this.renderer.createText(this._el_350, 'Enter', null);
        this._text_352 = this.renderer.createText(this._el_342, ' так же будет выполняться загрузка данных.\n	', null);
        this._text_353 = this.renderer.createText(this._el_322, '\n', null);
        this._text_354 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_355 = import4.createRenderElement(this.renderer, parentRenderNode, 'section', new import4.InlineArray2(2, 'id', 'buffered-pager'), null);
        this._text_356 = this.renderer.createText(this._el_355, '\n	', null);
        this._el_357 = import4.createRenderElement(this.renderer, this._el_355, 'h3', import4.EMPTY_INLINE_ARRAY, null);
        this._text_358 = this.renderer.createText(this._el_357, 'Использование ', null);
        this._el_359 = import4.createRenderElement(this.renderer, this._el_357, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_360 = this.renderer.createText(this._el_359, 'rt-buffered-pager', null);
        this._text_361 = this.renderer.createText(this._el_357, ' component', null);
        this._text_362 = this.renderer.createText(this._el_355, '\n	', null);
        this._el_363 = import4.createRenderElement(this.renderer, this._el_355, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_364 = this.renderer.createText(this._el_363, '\n		Как и в случае с ', null);
        this._el_365 = import4.createRenderElement(this.renderer, this._el_363, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_366 = this.renderer.createText(this._el_365, 'paged pager', null);
        this._text_367 = this.renderer.createText(this._el_363, ', все начинается с компонента-контейнера, но на этот раз это ', null);
        this._el_368 = import4.createRenderElement(this.renderer, this._el_363, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_369 = this.renderer.createText(this._el_368, 'rt-buffered-pager', null);
        this._text_370 = this.renderer.createText(this._el_363, '.\n	', null);
        this._text_371 = this.renderer.createText(this._el_355, '\n	', null);
        this._el_372 = import4.createRenderElement(this.renderer, this._el_355, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_373 = this.renderer.createText(this._el_372, '\n		Данный компонент имеет следующие параметры настройки:\n	', null);
        this._text_374 = this.renderer.createText(this._el_355, '\n	', null);
        this._el_375 = import4.createRenderElement(this.renderer, this._el_355, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_376 = this.renderer.createText(this._el_375, 'minRowCount = "<number>"', null);
        this._text_377 = this.renderer.createText(this._el_355, '\n	', null);
        this._el_378 = import4.createRenderElement(this.renderer, this._el_355, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_379 = this.renderer.createText(this._el_378, '\n		Позволяет указать минимальное возможное значение для параметра ', null);
        this._el_380 = import4.createRenderElement(this.renderer, this._el_378, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_381 = this.renderer.createText(this._el_380, 'take', null);
        this._text_382 = this.renderer.createText(this._el_378, ' пейджера. По умолчанию равен 1.\n	', null);
        this._text_383 = this.renderer.createText(this._el_355, '\n	', null);
        this._el_384 = import4.createRenderElement(this.renderer, this._el_355, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_385 = this.renderer.createText(this._el_384, 'maxRowCount = "<number>"', null);
        this._text_386 = this.renderer.createText(this._el_355, '\n	', null);
        this._el_387 = import4.createRenderElement(this.renderer, this._el_355, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_388 = this.renderer.createText(this._el_387, '\n		Позволяет указать максимальное возможное значение для параметра ', null);
        this._el_389 = import4.createRenderElement(this.renderer, this._el_387, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_390 = this.renderer.createText(this._el_389, 'take', null);
        this._text_391 = this.renderer.createText(this._el_387, ' пейджера. По умолчанию равен 200.\n	', null);
        this._text_392 = this.renderer.createText(this._el_355, '\n	', null);
        this._el_393 = import4.createRenderElement(this.renderer, this._el_355, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_394 = this.renderer.createText(this._el_393, 'defaultRowCount = "<number>"', null);
        this._text_395 = this.renderer.createText(this._el_355, '\n	', null);
        this._el_396 = import4.createRenderElement(this.renderer, this._el_355, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_397 = this.renderer.createText(this._el_396, '\n		Позволяет указать значение по умолчанию для свойства ', null);
        this._el_398 = import4.createRenderElement(this.renderer, this._el_396, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_399 = this.renderer.createText(this._el_398, 'take', null);
        this._text_400 = this.renderer.createText(this._el_396, ' размера страницы списка. По умолчанию равен 20.\n	', null);
        this._text_401 = this.renderer.createText(this._el_355, '\n	', null);
        this._el_402 = import4.createRenderElement(this.renderer, this._el_355, 'aside', import4.EMPTY_INLINE_ARRAY, null);
        this._text_403 = this.renderer.createText(this._el_402, '\n		', null);
        this._el_404 = import4.createRenderElement(this.renderer, this._el_402, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_405 = this.renderer.createText(this._el_404, '\n			Аналогично ', null);
        this._el_406 = import4.createRenderElement(this.renderer, this._el_404, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_407 = this.renderer.createText(this._el_406, 'PagedPager', null);
        this._text_408 = this.renderer.createText(this._el_404, ', вы можете изменить указанные настройки глобально. Для этого необходимо импортировать\n			сервис ', null);
        this._el_409 = import4.createRenderElement(this.renderer, this._el_404, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_410 = this.renderer.createText(this._el_409, 'BufferedPager', null);
        this._text_411 = this.renderer.createText(this._el_404, ' из библиотеки ', null);
        this._el_412 = import4.createRenderElement(this.renderer, this._el_404, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_413 = this.renderer.createText(this._el_412, 'right-angled', null);
        this._text_414 = this.renderer.createText(this._el_404, ' и установить одноименные значения в статическом\n			объекте ', null);
        this._el_415 = import4.createRenderElement(this.renderer, this._el_404, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_416 = this.renderer.createText(this._el_415, 'settings', null);
        this._text_417 = this.renderer.createText(this._el_404, '.\n		', null);
        this._text_418 = this.renderer.createText(this._el_402, '\n		', null);
        this._el_419 = import4.createRenderElement(this.renderer, this._el_402, 'rt-demo-tab-section', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_419 = new import3.AppElement(419, 402, this, this._el_419);
        this.compView_419 = import11.viewFactory_TabSectionComponent0(this.viewUtils, this.injector(419), this._appEl_419);
        this._TabSectionComponent_419_4 = new import11.Wrapper_TabSectionComponent();
        this._appEl_419.initComponent(this._TabSectionComponent_419_4.context, this.compView_419);
        this._text_420 = this.renderer.createText(null, '\n			', null);
        this._el_421 = import4.createRenderElement(this.renderer, null, 'rt-demo-code-tab', new import4.InlineArray2(2, 'url', '%2Bpaging-and-state/global-configuration/app.component.buffered.ts'), null);
        this._appEl_421 = new import3.AppElement(421, 419, this, this._el_421);
        this.compView_421 = import13.viewFactory_CodeTabComponent0(this.viewUtils, this.injector(421), this._appEl_421);
        this._CodeTabComponent_421_4 = new import13.Wrapper_CodeTabComponent(this._TabSectionComponent_419_4.context, this.parentInjector.get(import20.Http), new import21.ElementRef(this._el_421));
        this._appEl_421.initComponent(this._CodeTabComponent_421_4.context, this.compView_421);
        this._text_422 = this.renderer.createText(null, '\n			', null);
        this.compView_421.create(this._CodeTabComponent_421_4.context, null);
        this._text_423 = this.renderer.createText(null, '\n		', null);
        this.compView_419.create(this._TabSectionComponent_419_4.context, null);
        this._text_424 = this.renderer.createText(this._el_402, '\n	', null);
        this._text_425 = this.renderer.createText(this._el_355, '\n	', null);
        this._el_426 = import4.createRenderElement(this.renderer, this._el_355, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_427 = this.renderer.createText(this._el_426, 'canLoadMore', null);
        this._text_428 = this.renderer.createText(this._el_355, '\n	', null);
        this._el_429 = import4.createRenderElement(this.renderer, this._el_355, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_430 = this.renderer.createText(this._el_429, '\n		Возвращает ', null);
        this._el_431 = import4.createRenderElement(this.renderer, this._el_429, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_432 = this.renderer.createText(this._el_431, 'true', null);
        this._text_433 = this.renderer.createText(this._el_429, ' если загружены не все записи и можно догрузить еще.\n	', null);
        this._text_434 = this.renderer.createText(this._el_355, '\n', null);
        this._text_435 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_436 = import4.createRenderElement(this.renderer, parentRenderNode, 'section', new import4.InlineArray2(2, 'id', 'buffered-directives'), null);
        this._text_437 = this.renderer.createText(this._el_436, '\n	', null);
        this._el_438 = import4.createRenderElement(this.renderer, this._el_436, 'h3', import4.EMPTY_INLINE_ARRAY, null);
        this._text_439 = this.renderer.createText(this._el_438, 'Additional buffered pager directives', null);
        this._text_440 = this.renderer.createText(this._el_436, '\n	', null);
        this._el_441 = import4.createRenderElement(this.renderer, this._el_436, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_442 = this.renderer.createText(this._el_441, 'rtLoadMore', null);
        this._text_443 = this.renderer.createText(this._el_436, '\n	', null);
        this._el_444 = import4.createRenderElement(this.renderer, this._el_436, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_445 = this.renderer.createText(this._el_444, '\n		Выполняет подгрузку следующего набора записей buffered списка при клике по элементу, если это возможно.\n	', null);
        this._text_446 = this.renderer.createText(this._el_436, '\n	', null);
        this._el_447 = import4.createRenderElement(this.renderer, this._el_436, 'h4', import4.EMPTY_INLINE_ARRAY, null);
        this._text_448 = this.renderer.createText(this._el_447, 'rtRowCount', null);
        this._text_449 = this.renderer.createText(this._el_436, '\n	', null);
        this._el_450 = import4.createRenderElement(this.renderer, this._el_436, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_451 = this.renderer.createText(this._el_450, '\n		Элемент ', null);
        this._el_452 = import4.createRenderElement(this.renderer, this._el_450, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_453 = this.renderer.createText(this._el_452, 'input', null);
        this._text_454 = this.renderer.createText(this._el_450, ' помеченный данной директивой получает функциональность изменения параметра ', null);
        this._el_455 = import4.createRenderElement(this.renderer, this._el_450, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_456 = this.renderer.createText(this._el_455, 'take', null);
        this._text_457 = this.renderer.createText(this._el_450, '.\n		Вводимые значения ограничиваются рядом правил. Например, нельзя указать значение большее, чем\n		', null);
        this._el_458 = import4.createRenderElement(this.renderer, this._el_450, 'a', new import4.InlineArray4(4, 'href', 'http://fshchudlo.github.io/e2e4/classes/bufferedpager.html#maxrowcount', 'target', '_blank'), null);
        this._text_459 = this.renderer.createText(this._el_458, 'maxRowCount', null);
        this._text_460 = this.renderer.createText(this._el_450, '.\n	', null);
        this._text_461 = this.renderer.createText(this._el_436, '\n	', null);
        this._el_462 = import4.createRenderElement(this.renderer, this._el_436, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_463 = this.renderer.createText(this._el_462, '\n		Так же по нажатию клавиши ', null);
        this._el_464 = import4.createRenderElement(this.renderer, this._el_462, 'code', import4.EMPTY_INLINE_ARRAY, null);
        this._text_465 = this.renderer.createText(this._el_464, 'Enter', null);
        this._text_466 = this.renderer.createText(this._el_462, ' на данном элементе будет выполняться подгрузка следующего фрагмента данных.\n	', null);
        this._text_467 = this.renderer.createText(this._el_436, '\n	', null);
        this._el_468 = import4.createRenderElement(this.renderer, this._el_436, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_469 = this.renderer.createText(this._el_468, '\n		Ниже вы можете увидеть реализацию buffered pager-а и живое демо использующего его списка его работы.\n	', null);
        this._text_470 = this.renderer.createText(this._el_436, '\n	', null);
        this._el_471 = import4.createRenderElement(this.renderer, this._el_436, 'aside', import4.EMPTY_INLINE_ARRAY, null);
        this._text_472 = this.renderer.createText(this._el_471, '\n		', null);
        this._el_473 = import4.createRenderElement(this.renderer, this._el_471, 'p', import4.EMPTY_INLINE_ARRAY, null);
        this._text_474 = this.renderer.createText(this._el_473, '\n			Как и в случае paged pager, шаблон выглядит несколько жутко и лучше бы реализовать отдельные компоненты-кнопки, вместо вызова\n			методов pager-а прямо в шаблоне. Но такой подход с проще с точки зрения демонстрации возможностей фреймворка.\n		', null);
        this._text_475 = this.renderer.createText(this._el_471, '\n	', null);
        this._text_476 = this.renderer.createText(this._el_436, '\n	', null);
        this._el_477 = import4.createRenderElement(this.renderer, this._el_436, 'rt-demo-tab-section', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_477 = new import3.AppElement(477, 436, this, this._el_477);
        this.compView_477 = import11.viewFactory_TabSectionComponent0(this.viewUtils, this.injector(477), this._appEl_477);
        this._TabSectionComponent_477_4 = new import11.Wrapper_TabSectionComponent();
        this._appEl_477.initComponent(this._TabSectionComponent_477_4.context, this.compView_477);
        this._text_478 = this.renderer.createText(null, '\n		', null);
        this._el_479 = import4.createRenderElement(this.renderer, null, 'rt-demo-sample-tab', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_479 = new import3.AppElement(479, 477, this, this._el_479);
        this.compView_479 = import15.viewFactory_SampleTabComponent0(this.viewUtils, this.injector(479), this._appEl_479);
        this._SampleTabComponent_479_4 = new import15.Wrapper_SampleTabComponent(this._TabSectionComponent_477_4.context);
        this._appEl_479.initComponent(this._SampleTabComponent_479_4.context, this.compView_479);
        this._text_480 = this.renderer.createText(null, '\n			', null);
        this._el_481 = import4.createRenderElement(this.renderer, null, 'rt-demo-reusable-buffered-sample', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_481 = new import3.AppElement(481, 479, this, this._el_481);
        this.compView_481 = import19.viewFactory_ReusableBufferedListSampleComponent0(this.viewUtils, this.injector(481), this._appEl_481);
        this._ReusableBufferedListSampleComponent_481_4 = new import19.Wrapper_ReusableBufferedListSampleComponent(this.parentInjector.get(import22.AirportsService));
        this._appEl_481.initComponent(this._ReusableBufferedListSampleComponent_481_4.context, this.compView_481);
        this.compView_481.create(this._ReusableBufferedListSampleComponent_481_4.context, null);
        this._text_482 = this.renderer.createText(null, '\n		', null);
        this.compView_479.create(this._SampleTabComponent_479_4.context, null);
        this._text_483 = this.renderer.createText(null, '\n		', null);
        this._el_484 = import4.createRenderElement(this.renderer, null, 'rt-demo-code-tab', new import4.InlineArray2(2, 'url', 'shared/footers/buffered-footer.component/buffered-footer.component.html'), null);
        this._appEl_484 = new import3.AppElement(484, 477, this, this._el_484);
        this.compView_484 = import13.viewFactory_CodeTabComponent0(this.viewUtils, this.injector(484), this._appEl_484);
        this._CodeTabComponent_484_4 = new import13.Wrapper_CodeTabComponent(this._TabSectionComponent_477_4.context, this.parentInjector.get(import20.Http), new import21.ElementRef(this._el_484));
        this._appEl_484.initComponent(this._CodeTabComponent_484_4.context, this.compView_484);
        this._text_485 = this.renderer.createText(null, '\n		', null);
        this.compView_484.create(this._CodeTabComponent_484_4.context, null);
        this._text_486 = this.renderer.createText(null, '\n		', null);
        this._el_487 = import4.createRenderElement(this.renderer, null, 'rt-demo-code-tab', new import4.InlineArray2(2, 'url', 'shared/footers/buffered-footer.component/buffered-footer.component.ts'), null);
        this._appEl_487 = new import3.AppElement(487, 477, this, this._el_487);
        this.compView_487 = import13.viewFactory_CodeTabComponent0(this.viewUtils, this.injector(487), this._appEl_487);
        this._CodeTabComponent_487_4 = new import13.Wrapper_CodeTabComponent(this._TabSectionComponent_477_4.context, this.parentInjector.get(import20.Http), new import21.ElementRef(this._el_487));
        this._appEl_487.initComponent(this._CodeTabComponent_487_4.context, this.compView_487);
        this._text_488 = this.renderer.createText(null, '\n		', null);
        this.compView_487.create(this._CodeTabComponent_487_4.context, null);
        this._text_489 = this.renderer.createText(null, '\n	', null);
        this.compView_477.create(this._TabSectionComponent_477_4.context, null);
        this._text_490 = this.renderer.createText(this._el_436, '\n', null);
        this.init(null, [
            this._el_0,
            this._text_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._el_8,
            this._el_9,
            this._text_10,
            this._text_11,
            this._el_12,
            this._el_13,
            this._text_14,
            this._text_15,
            this._el_16,
            this._el_17,
            this._text_18,
            this._text_19,
            this._el_20,
            this._text_21,
            this._el_22,
            this._text_23,
            this._el_24,
            this._text_25,
            this._text_26,
            this._text_27,
            this._text_28,
            this._el_29,
            this._text_30,
            this._el_31,
            this._text_32,
            this._text_33,
            this._text_34,
            this._el_35,
            this._text_36,
            this._el_37,
            this._text_38,
            this._el_39,
            this._text_40,
            this._text_41,
            this._text_42,
            this._text_43,
            this._el_44,
            this._text_45,
            this._el_46,
            this._text_47,
            this._text_48,
            this._text_49,
            this._text_50,
            this._el_51,
            this._text_52,
            this._el_53,
            this._text_54,
            this._el_55,
            this._text_56,
            this._el_57,
            this._text_58,
            this._text_59,
            this._text_60,
            this._text_61,
            this._el_62,
            this._text_63,
            this._text_64,
            this._el_65,
            this._text_66,
            this._text_67,
            this._el_68,
            this._text_69,
            this._el_70,
            this._text_71,
            this._text_72,
            this._el_73,
            this._text_74,
            this._text_75,
            this._el_76,
            this._text_77,
            this._text_78,
            this._el_79,
            this._text_80,
            this._text_81,
            this._text_82,
            this._el_83,
            this._text_84,
            this._text_85,
            this._text_86,
            this._el_87,
            this._text_88,
            this._el_89,
            this._text_90,
            this._text_91,
            this._el_92,
            this._text_93,
            this._el_94,
            this._text_95,
            this._text_96,
            this._el_97,
            this._text_98,
            this._text_99,
            this._el_100,
            this._text_101,
            this._text_102,
            this._el_103,
            this._text_104,
            this._text_105,
            this._text_106,
            this._el_107,
            this._text_108,
            this._el_109,
            this._text_110,
            this._text_111,
            this._text_112,
            this._text_113,
            this._el_114,
            this._text_115,
            this._el_116,
            this._text_117,
            this._text_118,
            this._el_119,
            this._text_120,
            this._el_121,
            this._text_122,
            this._text_123,
            this._text_124,
            this._el_125,
            this._text_126,
            this._el_127,
            this._el_128,
            this._text_129,
            this._text_130,
            this._text_131,
            this._el_132,
            this._el_133,
            this._text_134,
            this._text_135,
            this._text_136,
            this._el_137,
            this._el_138,
            this._text_139,
            this._text_140,
            this._text_141,
            this._el_142,
            this._el_143,
            this._text_144,
            this._text_145,
            this._el_146,
            this._text_147,
            this._text_148,
            this._text_149,
            this._el_150,
            this._el_151,
            this._text_152,
            this._text_153,
            this._text_154,
            this._el_155,
            this._el_156,
            this._text_157,
            this._text_158,
            this._text_159,
            this._text_160,
            this._el_161,
            this._text_162,
            this._el_163,
            this._text_164,
            this._text_165,
            this._text_166,
            this._el_167,
            this._text_168,
            this._el_169,
            this._text_170,
            this._el_171,
            this._text_172,
            this._text_173,
            this._el_174,
            this._text_175,
            this._text_176,
            this._el_177,
            this._text_178,
            this._text_179,
            this._text_180,
            this._text_181,
            this._el_182,
            this._text_183,
            this._el_184,
            this._text_185,
            this._el_186,
            this._text_187,
            this._text_188,
            this._text_189,
            this._el_190,
            this._text_191,
            this._el_192,
            this._text_193,
            this._text_194,
            this._text_195,
            this._el_196,
            this._text_197,
            this._text_198,
            this._el_199,
            this._text_200,
            this._text_201,
            this._el_202,
            this._text_203,
            this._el_204,
            this._text_205,
            this._text_206,
            this._text_207,
            this._el_208,
            this._text_209,
            this._text_210,
            this._el_211,
            this._text_212,
            this._el_213,
            this._text_214,
            this._text_215,
            this._text_216,
            this._el_217,
            this._text_218,
            this._text_219,
            this._el_220,
            this._text_221,
            this._el_222,
            this._text_223,
            this._text_224,
            this._text_225,
            this._el_226,
            this._text_227,
            this._el_228,
            this._text_229,
            this._el_230,
            this._text_231,
            this._text_232,
            this._el_233,
            this._text_234,
            this._text_235,
            this._el_236,
            this._text_237,
            this._text_238,
            this._el_239,
            this._text_240,
            this._text_241,
            this._el_242,
            this._text_243,
            this._text_244,
            this._el_245,
            this._text_246,
            this._text_247,
            this._text_248,
            this._el_249,
            this._text_250,
            this._el_251,
            this._text_252,
            this._text_253,
            this._text_254,
            this._text_255,
            this._el_256,
            this._text_257,
            this._text_258,
            this._el_259,
            this._text_260,
            this._text_261,
            this._el_262,
            this._text_263,
            this._text_264,
            this._el_265,
            this._text_266,
            this._text_267,
            this._el_268,
            this._text_269,
            this._text_270,
            this._el_271,
            this._text_272,
            this._text_273,
            this._el_274,
            this._text_275,
            this._text_276,
            this._el_277,
            this._text_278,
            this._text_279,
            this._el_280,
            this._text_281,
            this._text_282,
            this._el_283,
            this._text_284,
            this._el_285,
            this._text_286,
            this._text_287,
            this._text_288,
            this._el_289,
            this._text_290,
            this._text_291,
            this._el_292,
            this._text_293,
            this._el_294,
            this._text_295,
            this._text_296,
            this._text_297,
            this._el_298,
            this._text_299,
            this._text_300,
            this._el_301,
            this._text_302,
            this._el_303,
            this._text_304,
            this._text_305,
            this._text_306,
            this._el_307,
            this._text_308,
            this._el_309,
            this._text_310,
            this._el_311,
            this._text_312,
            this._text_313,
            this._el_314,
            this._text_315,
            this._text_316,
            this._el_317,
            this._text_318,
            this._text_319,
            this._text_320,
            this._text_321,
            this._el_322,
            this._text_323,
            this._el_324,
            this._text_325,
            this._text_326,
            this._el_327,
            this._text_328,
            this._text_329,
            this._el_330,
            this._text_331,
            this._el_332,
            this._text_333,
            this._text_334,
            this._el_335,
            this._text_336,
            this._text_337,
            this._text_338,
            this._el_339,
            this._text_340,
            this._text_341,
            this._el_342,
            this._text_343,
            this._el_344,
            this._text_345,
            this._text_346,
            this._el_347,
            this._text_348,
            this._text_349,
            this._el_350,
            this._text_351,
            this._text_352,
            this._text_353,
            this._text_354,
            this._el_355,
            this._text_356,
            this._el_357,
            this._text_358,
            this._el_359,
            this._text_360,
            this._text_361,
            this._text_362,
            this._el_363,
            this._text_364,
            this._el_365,
            this._text_366,
            this._text_367,
            this._el_368,
            this._text_369,
            this._text_370,
            this._text_371,
            this._el_372,
            this._text_373,
            this._text_374,
            this._el_375,
            this._text_376,
            this._text_377,
            this._el_378,
            this._text_379,
            this._el_380,
            this._text_381,
            this._text_382,
            this._text_383,
            this._el_384,
            this._text_385,
            this._text_386,
            this._el_387,
            this._text_388,
            this._el_389,
            this._text_390,
            this._text_391,
            this._text_392,
            this._el_393,
            this._text_394,
            this._text_395,
            this._el_396,
            this._text_397,
            this._el_398,
            this._text_399,
            this._text_400,
            this._text_401,
            this._el_402,
            this._text_403,
            this._el_404,
            this._text_405,
            this._el_406,
            this._text_407,
            this._text_408,
            this._el_409,
            this._text_410,
            this._text_411,
            this._el_412,
            this._text_413,
            this._text_414,
            this._el_415,
            this._text_416,
            this._text_417,
            this._text_418,
            this._el_419,
            this._text_420,
            this._el_421,
            this._text_422,
            this._text_423,
            this._text_424,
            this._text_425,
            this._el_426,
            this._text_427,
            this._text_428,
            this._el_429,
            this._text_430,
            this._el_431,
            this._text_432,
            this._text_433,
            this._text_434,
            this._text_435,
            this._el_436,
            this._text_437,
            this._el_438,
            this._text_439,
            this._text_440,
            this._el_441,
            this._text_442,
            this._text_443,
            this._el_444,
            this._text_445,
            this._text_446,
            this._el_447,
            this._text_448,
            this._text_449,
            this._el_450,
            this._text_451,
            this._el_452,
            this._text_453,
            this._text_454,
            this._el_455,
            this._text_456,
            this._text_457,
            this._el_458,
            this._text_459,
            this._text_460,
            this._text_461,
            this._el_462,
            this._text_463,
            this._el_464,
            this._text_465,
            this._text_466,
            this._text_467,
            this._el_468,
            this._text_469,
            this._text_470,
            this._el_471,
            this._text_472,
            this._el_473,
            this._text_474,
            this._text_475,
            this._text_476,
            this._el_477,
            this._text_478,
            this._el_479,
            this._text_480,
            this._el_481,
            this._text_482,
            this._text_483,
            this._el_484,
            this._text_485,
            this._text_486,
            this._el_487,
            this._text_488,
            this._text_489,
            this._text_490
        ], null);
        return null;
    };
    _View_PagingAndStateComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import12.CodeTabComponent) && ((109 <= requestNodeIndex) && (requestNodeIndex <= 110)))) {
            return this._CodeTabComponent_109_4.context;
        }
        if (((token === import10.TabSectionComponent) && ((107 <= requestNodeIndex) && (requestNodeIndex <= 111)))) {
            return this._TabSectionComponent_107_4.context;
        }
        if (((token === import16.StateComponentsComponent) && (171 === requestNodeIndex))) {
            return this._StateComponentsComponent_171_4.context;
        }
        if (((token === import14.SampleTabComponent) && ((169 <= requestNodeIndex) && (requestNodeIndex <= 172)))) {
            return this._SampleTabComponent_169_4.context;
        }
        if (((token === import12.CodeTabComponent) && ((174 <= requestNodeIndex) && (requestNodeIndex <= 175)))) {
            return this._CodeTabComponent_174_4.context;
        }
        if (((token === import12.CodeTabComponent) && ((177 <= requestNodeIndex) && (requestNodeIndex <= 178)))) {
            return this._CodeTabComponent_177_4.context;
        }
        if (((token === import10.TabSectionComponent) && ((167 <= requestNodeIndex) && (requestNodeIndex <= 179)))) {
            return this._TabSectionComponent_167_4.context;
        }
        if (((token === import12.CodeTabComponent) && ((251 <= requestNodeIndex) && (requestNodeIndex <= 252)))) {
            return this._CodeTabComponent_251_4.context;
        }
        if (((token === import10.TabSectionComponent) && ((249 <= requestNodeIndex) && (requestNodeIndex <= 253)))) {
            return this._TabSectionComponent_249_4.context;
        }
        if (((token === import18.ReusableBufferedListSampleComponent) && (311 === requestNodeIndex))) {
            return this._ReusableBufferedListSampleComponent_311_4.context;
        }
        if (((token === import14.SampleTabComponent) && ((309 <= requestNodeIndex) && (requestNodeIndex <= 312)))) {
            return this._SampleTabComponent_309_4.context;
        }
        if (((token === import12.CodeTabComponent) && ((314 <= requestNodeIndex) && (requestNodeIndex <= 315)))) {
            return this._CodeTabComponent_314_4.context;
        }
        if (((token === import12.CodeTabComponent) && ((317 <= requestNodeIndex) && (requestNodeIndex <= 318)))) {
            return this._CodeTabComponent_317_4.context;
        }
        if (((token === import10.TabSectionComponent) && ((307 <= requestNodeIndex) && (requestNodeIndex <= 319)))) {
            return this._TabSectionComponent_307_4.context;
        }
        if (((token === import12.CodeTabComponent) && ((421 <= requestNodeIndex) && (requestNodeIndex <= 422)))) {
            return this._CodeTabComponent_421_4.context;
        }
        if (((token === import10.TabSectionComponent) && ((419 <= requestNodeIndex) && (requestNodeIndex <= 423)))) {
            return this._TabSectionComponent_419_4.context;
        }
        if (((token === import18.ReusableBufferedListSampleComponent) && (481 === requestNodeIndex))) {
            return this._ReusableBufferedListSampleComponent_481_4.context;
        }
        if (((token === import14.SampleTabComponent) && ((479 <= requestNodeIndex) && (requestNodeIndex <= 482)))) {
            return this._SampleTabComponent_479_4.context;
        }
        if (((token === import12.CodeTabComponent) && ((484 <= requestNodeIndex) && (requestNodeIndex <= 485)))) {
            return this._CodeTabComponent_484_4.context;
        }
        if (((token === import12.CodeTabComponent) && ((487 <= requestNodeIndex) && (requestNodeIndex <= 488)))) {
            return this._CodeTabComponent_487_4.context;
        }
        if (((token === import10.TabSectionComponent) && ((477 <= requestNodeIndex) && (requestNodeIndex <= 489)))) {
            return this._TabSectionComponent_477_4.context;
        }
        return notFoundResult;
    };
    _View_PagingAndStateComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        this._TabSectionComponent_107_4.ngDoCheck(this, this._el_107, throwOnChange);
        var currVal_109_0_0 = '%2Bpaging-and-state/bootstrap/app.module.tsfake';
        this._CodeTabComponent_109_4.check_url(currVal_109_0_0, throwOnChange, false);
        this._CodeTabComponent_109_4.ngDoCheck(this, this._el_109, throwOnChange);
        this._TabSectionComponent_167_4.ngDoCheck(this, this._el_167, throwOnChange);
        this._SampleTabComponent_169_4.ngDoCheck(this, this._el_169, throwOnChange);
        this._StateComponentsComponent_171_4.ngDoCheck(this, this._el_171, throwOnChange);
        var currVal_174_0_0 = '%2Bpaging-and-state/state-components/state-components.component.html';
        this._CodeTabComponent_174_4.check_url(currVal_174_0_0, throwOnChange, false);
        this._CodeTabComponent_174_4.ngDoCheck(this, this._el_174, throwOnChange);
        var currVal_177_0_0 = '%2Bpaging-and-state/state-components/state-components.component.ts';
        this._CodeTabComponent_177_4.check_url(currVal_177_0_0, throwOnChange, false);
        this._CodeTabComponent_177_4.ngDoCheck(this, this._el_177, throwOnChange);
        this._TabSectionComponent_249_4.ngDoCheck(this, this._el_249, throwOnChange);
        var currVal_251_0_0 = '%2Bpaging-and-state/global-configuration/app.component.paged.ts';
        this._CodeTabComponent_251_4.check_url(currVal_251_0_0, throwOnChange, false);
        this._CodeTabComponent_251_4.ngDoCheck(this, this._el_251, throwOnChange);
        this._TabSectionComponent_307_4.ngDoCheck(this, this._el_307, throwOnChange);
        this._SampleTabComponent_309_4.ngDoCheck(this, this._el_309, throwOnChange);
        this._ReusableBufferedListSampleComponent_311_4.ngDoCheck(this, this._el_311, throwOnChange);
        var currVal_314_0_0 = 'shared/footers/buffered-footer.component/buffered-footer.component.html';
        this._CodeTabComponent_314_4.check_url(currVal_314_0_0, throwOnChange, false);
        this._CodeTabComponent_314_4.ngDoCheck(this, this._el_314, throwOnChange);
        var currVal_317_0_0 = 'shared/footers/buffered-footer.component/buffered-footer.component.ts';
        this._CodeTabComponent_317_4.check_url(currVal_317_0_0, throwOnChange, false);
        this._CodeTabComponent_317_4.ngDoCheck(this, this._el_317, throwOnChange);
        this._TabSectionComponent_419_4.ngDoCheck(this, this._el_419, throwOnChange);
        var currVal_421_0_0 = '%2Bpaging-and-state/global-configuration/app.component.buffered.ts';
        this._CodeTabComponent_421_4.check_url(currVal_421_0_0, throwOnChange, false);
        this._CodeTabComponent_421_4.ngDoCheck(this, this._el_421, throwOnChange);
        this._TabSectionComponent_477_4.ngDoCheck(this, this._el_477, throwOnChange);
        this._SampleTabComponent_479_4.ngDoCheck(this, this._el_479, throwOnChange);
        this._ReusableBufferedListSampleComponent_481_4.ngDoCheck(this, this._el_481, throwOnChange);
        var currVal_484_0_0 = 'shared/footers/buffered-footer.component/buffered-footer.component.html';
        this._CodeTabComponent_484_4.check_url(currVal_484_0_0, throwOnChange, false);
        this._CodeTabComponent_484_4.ngDoCheck(this, this._el_484, throwOnChange);
        var currVal_487_0_0 = 'shared/footers/buffered-footer.component/buffered-footer.component.ts';
        this._CodeTabComponent_487_4.check_url(currVal_487_0_0, throwOnChange, false);
        this._CodeTabComponent_487_4.ngDoCheck(this, this._el_487, throwOnChange);
        this.compView_107.detectChanges(throwOnChange);
        this.compView_109.detectChanges(throwOnChange);
        this.compView_167.detectChanges(throwOnChange);
        this.compView_169.detectChanges(throwOnChange);
        this.compView_171.detectChanges(throwOnChange);
        this.compView_174.detectChanges(throwOnChange);
        this.compView_177.detectChanges(throwOnChange);
        this.compView_249.detectChanges(throwOnChange);
        this.compView_251.detectChanges(throwOnChange);
        this.compView_307.detectChanges(throwOnChange);
        this.compView_309.detectChanges(throwOnChange);
        this.compView_311.detectChanges(throwOnChange);
        this.compView_314.detectChanges(throwOnChange);
        this.compView_317.detectChanges(throwOnChange);
        this.compView_419.detectChanges(throwOnChange);
        this.compView_421.detectChanges(throwOnChange);
        this.compView_477.detectChanges(throwOnChange);
        this.compView_479.detectChanges(throwOnChange);
        this.compView_481.detectChanges(throwOnChange);
        this.compView_484.detectChanges(throwOnChange);
        this.compView_487.detectChanges(throwOnChange);
    };
    _View_PagingAndStateComponent0.prototype.destroyInternal = function () {
        this.compView_107.destroy();
        this.compView_109.destroy();
        this.compView_167.destroy();
        this.compView_169.destroy();
        this.compView_171.destroy();
        this.compView_174.destroy();
        this.compView_177.destroy();
        this.compView_249.destroy();
        this.compView_251.destroy();
        this.compView_307.destroy();
        this.compView_309.destroy();
        this.compView_311.destroy();
        this.compView_314.destroy();
        this.compView_317.destroy();
        this.compView_419.destroy();
        this.compView_421.destroy();
        this.compView_477.destroy();
        this.compView_479.destroy();
        this.compView_481.destroy();
        this.compView_484.destroy();
        this.compView_487.destroy();
    };
    _View_PagingAndStateComponent0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 107) && (ngContentIndex == 0))) {
            cb(this._text_108, ctx);
            cb(this._el_109, ctx);
            cb(this._text_111, ctx);
        }
        if (((nodeIndex == 167) && (ngContentIndex == 0))) {
            cb(this._text_168, ctx);
            cb(this._el_169, ctx);
            cb(this._text_173, ctx);
            cb(this._el_174, ctx);
            cb(this._text_176, ctx);
            cb(this._el_177, ctx);
            cb(this._text_179, ctx);
        }
        if (((nodeIndex == 169) && (ngContentIndex == 0))) {
            cb(this._text_170, ctx);
            cb(this._el_171, ctx);
            cb(this._text_172, ctx);
        }
        if (((nodeIndex == 249) && (ngContentIndex == 0))) {
            cb(this._text_250, ctx);
            cb(this._el_251, ctx);
            cb(this._text_253, ctx);
        }
        if (((nodeIndex == 307) && (ngContentIndex == 0))) {
            cb(this._text_308, ctx);
            cb(this._el_309, ctx);
            cb(this._text_313, ctx);
            cb(this._el_314, ctx);
            cb(this._text_316, ctx);
            cb(this._el_317, ctx);
            cb(this._text_319, ctx);
        }
        if (((nodeIndex == 309) && (ngContentIndex == 0))) {
            cb(this._text_310, ctx);
            cb(this._el_311, ctx);
            cb(this._text_312, ctx);
        }
        if (((nodeIndex == 419) && (ngContentIndex == 0))) {
            cb(this._text_420, ctx);
            cb(this._el_421, ctx);
            cb(this._text_423, ctx);
        }
        if (((nodeIndex == 477) && (ngContentIndex == 0))) {
            cb(this._text_478, ctx);
            cb(this._el_479, ctx);
            cb(this._text_483, ctx);
            cb(this._el_484, ctx);
            cb(this._text_486, ctx);
            cb(this._el_487, ctx);
            cb(this._text_489, ctx);
        }
        if (((nodeIndex == 479) && (ngContentIndex == 0))) {
            cb(this._text_480, ctx);
            cb(this._el_481, ctx);
            cb(this._text_482, ctx);
        }
    };
    return _View_PagingAndStateComponent0;
}(import1.AppView));
function viewFactory_PagingAndStateComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_PagingAndStateComponent === null)) {
        (renderType_PagingAndStateComponent = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, styles_PagingAndStateComponent, {}));
    }
    return new _View_PagingAndStateComponent0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_PagingAndStateComponent0 = viewFactory_PagingAndStateComponent0;


/***/ },

/***/ "./src/compiled/src/app/+paging-and-state/paging-and-state.module.ngfactory.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var import0 = __webpack_require__("./node_modules/@angular/core/src/linker/ng_module_factory.js");
var import1 = __webpack_require__("./src/app/+paging-and-state/paging-and-state.module.ts");
var import2 = __webpack_require__("./node_modules/@angular/common/src/common_module.js");
var import3 = __webpack_require__("./node_modules/@angular/router/src/router_module.js");
var import4 = __webpack_require__("./node_modules/@angular/forms/src/directives.js");
var import5 = __webpack_require__("./node_modules/@angular/forms/src/form_providers.js");
var import6 = __webpack_require__("./node_modules/right-angled/index.js");
var import7 = __webpack_require__("./src/app/shared/shared.module.ts");
var import8 = __webpack_require__("./node_modules/@angular/common/src/localization.js");
var import9 = __webpack_require__("./node_modules/@angular/forms/src/directives/radio_control_value_accessor.js");
var import11 = __webpack_require__("./src/compiled/src/app/+paging-and-state/paging-and-state.component.ngfactory.ts");
var import12 = __webpack_require__("./node_modules/@angular/core/src/i18n/tokens.js");
var import13 = __webpack_require__("./src/app/+paging-and-state/paging-and-state.component.ts");
var import14 = __webpack_require__("./node_modules/@angular/router/src/router_config_loader.js");
var PagingAndStateModuleInjector = (function (_super) {
    __extends(PagingAndStateModuleInjector, _super);
    function PagingAndStateModuleInjector(parent) {
        _super.call(this, parent, [import11.PagingAndStateComponentNgFactory], []);
    }
    Object.defineProperty(PagingAndStateModuleInjector.prototype, "_NgLocalization_11", {
        get: function () {
            if ((this.__NgLocalization_11 == null)) {
                (this.__NgLocalization_11 = new import8.NgLocaleLocalization(this.parent.get(import12.LOCALE_ID)));
            }
            return this.__NgLocalization_11;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagingAndStateModuleInjector.prototype, "_RadioControlRegistry_12", {
        get: function () {
            if ((this.__RadioControlRegistry_12 == null)) {
                (this.__RadioControlRegistry_12 = new import9.RadioControlRegistry());
            }
            return this.__RadioControlRegistry_12;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PagingAndStateModuleInjector.prototype, "_ROUTES_13", {
        get: function () {
            if ((this.__ROUTES_13 == null)) {
                (this.__ROUTES_13 = [[{
                            component: import13.PagingAndStateComponent,
                            path: ''
                        }
                    ]]);
            }
            return this.__ROUTES_13;
        },
        enumerable: true,
        configurable: true
    });
    PagingAndStateModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new import2.CommonModule();
        this._RouterModule_1 = new import3.RouterModule(this.parent.get(import3.ROUTER_FORROOT_GUARD, null));
        this._InternalFormsSharedModule_2 = new import4.InternalFormsSharedModule();
        this._FormsModule_3 = new import5.FormsModule();
        this._RTListsModule_4 = new import6.RTListsModule();
        this._RTSelectionModule_5 = new import6.RTSelectionModule();
        this._RTMiscModule_6 = new import6.RTMiscModule();
        this._RTFiltersModule_7 = new import6.RTFiltersModule();
        this._RTModule_8 = new import6.RTModule();
        this._SharedModule_9 = new import7.SharedModule();
        this._PagingAndStateModule_10 = new import1.PagingAndStateModule();
        return this._PagingAndStateModule_10;
    };
    PagingAndStateModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === import3.RouterModule)) {
            return this._RouterModule_1;
        }
        if ((token === import4.InternalFormsSharedModule)) {
            return this._InternalFormsSharedModule_2;
        }
        if ((token === import5.FormsModule)) {
            return this._FormsModule_3;
        }
        if ((token === import6.RTListsModule)) {
            return this._RTListsModule_4;
        }
        if ((token === import6.RTSelectionModule)) {
            return this._RTSelectionModule_5;
        }
        if ((token === import6.RTMiscModule)) {
            return this._RTMiscModule_6;
        }
        if ((token === import6.RTFiltersModule)) {
            return this._RTFiltersModule_7;
        }
        if ((token === import6.RTModule)) {
            return this._RTModule_8;
        }
        if ((token === import7.SharedModule)) {
            return this._SharedModule_9;
        }
        if ((token === import1.PagingAndStateModule)) {
            return this._PagingAndStateModule_10;
        }
        if ((token === import8.NgLocalization)) {
            return this._NgLocalization_11;
        }
        if ((token === import9.RadioControlRegistry)) {
            return this._RadioControlRegistry_12;
        }
        if ((token === import14.ROUTES)) {
            return this._ROUTES_13;
        }
        return notFoundResult;
    };
    PagingAndStateModuleInjector.prototype.destroyInternal = function () {
    };
    return PagingAndStateModuleInjector;
}(import0.NgModuleInjector));
exports.PagingAndStateModuleNgFactory = new import0.NgModuleFactory(PagingAndStateModuleInjector, import1.PagingAndStateModule);


/***/ },

/***/ "./src/compiled/src/app/+paging-and-state/reusable-buffered-sample/reusable-buffered-sample.component.ngfactory.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var import0 = __webpack_require__("./src/app/+paging-and-state/reusable-buffered-sample/reusable-buffered-sample.component.ts");
var import1 = __webpack_require__("./node_modules/@angular/core/src/linker/view.js");
var import3 = __webpack_require__("./node_modules/@angular/core/src/linker/element.js");
var import4 = __webpack_require__("./node_modules/@angular/core/src/linker/view_utils.js");
var import6 = __webpack_require__("./node_modules/@angular/core/src/linker/view_type.js");
var import7 = __webpack_require__("./node_modules/@angular/core/src/change_detection/change_detection.js");
var import8 = __webpack_require__("./src/app/shared/data/airports.service.ts");
var import9 = __webpack_require__("./node_modules/@angular/core/src/metadata/view.js");
var import10 = __webpack_require__("./node_modules/@angular/core/src/linker/component_factory.js");
var import11 = __webpack_require__("./node_modules/right-angled/src/core/async-subscriber.js");
var import12 = __webpack_require__("./node_modules/right-angled/src/core/providers.js");
var import13 = __webpack_require__("./node_modules/right-angled/src/core/list.js");
var import14 = __webpack_require__("./src/compiled/node_modules/right-angled/src/list-directives/list.directive.ngfactory.ts");
var import15 = __webpack_require__("./node_modules/right-angled/src/core/selection/selection-service.js");
var import16 = __webpack_require__("./src/compiled/node_modules/right-angled/src/selection-directives/selection-area.directive.ngfactory.ts");
var import17 = __webpack_require__("./node_modules/@angular/core/src/linker/query_list.js");
var import18 = __webpack_require__("./src/compiled/node_modules/@angular/common/src/directives/ng_for.ngfactory.ts");
var import19 = __webpack_require__("./src/app/shared/footers/buffered-footer.component/buffered-footer.component.ts");
var import20 = __webpack_require__("./src/compiled/src/app/shared/footers/buffered-footer.component/buffered-footer.component.ngfactory.ts");
var import21 = __webpack_require__("./node_modules/right-angled/src/core/state-service.js");
var import22 = __webpack_require__("./node_modules/@angular/core/src/linker/template_ref.js");
var import23 = __webpack_require__("./node_modules/@angular/core/src/change_detection/differs/iterable_differs.js");
var import24 = __webpack_require__("./node_modules/@angular/common/src/directives/ng_for.js");
var import25 = __webpack_require__("./node_modules/right-angled/src/selection-directives/selection-area.directive.js");
var import26 = __webpack_require__("./node_modules/e2e4/src/sortings-service.js");
var import27 = __webpack_require__("./node_modules/e2e4/src/filters-service.js");
var import28 = __webpack_require__("./node_modules/right-angled/src/list-directives/list.directive.js");
var import29 = __webpack_require__("./src/compiled/node_modules/right-angled/src/selection-directives/selectable.directive.ngfactory.ts");
var import30 = __webpack_require__("./node_modules/right-angled/src/selection-directives/selectable.directive.js");
var Wrapper_ReusableBufferedListSampleComponent = (function () {
    function Wrapper_ReusableBufferedListSampleComponent(p0) {
        this._changed = false;
        this.context = new import0.ReusableBufferedListSampleComponent(p0);
    }
    Wrapper_ReusableBufferedListSampleComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ReusableBufferedListSampleComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_ReusableBufferedListSampleComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_ReusableBufferedListSampleComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_ReusableBufferedListSampleComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ReusableBufferedListSampleComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_ReusableBufferedListSampleComponent;
}());
exports.Wrapper_ReusableBufferedListSampleComponent = Wrapper_ReusableBufferedListSampleComponent;
var renderType_ReusableBufferedListSampleComponent_Host = null;
var _View_ReusableBufferedListSampleComponent_Host0 = (function (_super) {
    __extends(_View_ReusableBufferedListSampleComponent_Host0, _super);
    function _View_ReusableBufferedListSampleComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ReusableBufferedListSampleComponent_Host0, renderType_ReusableBufferedListSampleComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ReusableBufferedListSampleComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer, 'rt-demo-reusable-buffered-sample', import4.EMPTY_INLINE_ARRAY, rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        this.compView_0 = viewFactory_ReusableBufferedListSampleComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._ReusableBufferedListSampleComponent_0_4 = new Wrapper_ReusableBufferedListSampleComponent(this.parentInjector.get(import8.AirportsService));
        this._appEl_0.initComponent(this._ReusableBufferedListSampleComponent_0_4.context, this.compView_0);
        this.compView_0.create(this._ReusableBufferedListSampleComponent_0_4.context, null);
        this.init(this._el_0, [this._el_0], null);
        return this._appEl_0;
    };
    _View_ReusableBufferedListSampleComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ReusableBufferedListSampleComponent) && (0 === requestNodeIndex))) {
            return this._ReusableBufferedListSampleComponent_0_4.context;
        }
        return notFoundResult;
    };
    _View_ReusableBufferedListSampleComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._ReusableBufferedListSampleComponent_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    _View_ReusableBufferedListSampleComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    _View_ReusableBufferedListSampleComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return _View_ReusableBufferedListSampleComponent_Host0;
}(import1.AppView));
function viewFactory_ReusableBufferedListSampleComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ReusableBufferedListSampleComponent_Host === null)) {
        (renderType_ReusableBufferedListSampleComponent_Host = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, [], {}));
    }
    return new _View_ReusableBufferedListSampleComponent_Host0(viewUtils, parentInjector, declarationEl);
}
exports.ReusableBufferedListSampleComponentNgFactory = new import10.ComponentFactory('rt-demo-reusable-buffered-sample', viewFactory_ReusableBufferedListSampleComponent_Host0, import0.ReusableBufferedListSampleComponent);
var styles_ReusableBufferedListSampleComponent = [];
var renderType_ReusableBufferedListSampleComponent = null;
var _View_ReusableBufferedListSampleComponent0 = (function (_super) {
    __extends(_View_ReusableBufferedListSampleComponent0, _super);
    function _View_ReusableBufferedListSampleComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ReusableBufferedListSampleComponent0, renderType_ReusableBufferedListSampleComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ReusableBufferedListSampleComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = import4.createRenderElement(this.renderer, parentRenderNode, 'div', new import4.InlineArray2(2, 'class', 'table-responsive'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n  ', null);
        this._el_2 = import4.createRenderElement(this.renderer, this._el_0, 'table', new import4.InlineArray2(2, 'class', 'table table-striped'), null);
        this._AsyncSubscriber_2_3 = new import11.AsyncSubscriber();
        this._SortingsService_2_4 = new import12.RtSortingsService();
        this._FiltersService_2_5 = new import12.RtFiltersService();
        this._RtList_2_6 = new import13.RtList(this._AsyncSubscriber_2_3, this.parentInjector.get(import21.RtStateService, null), this._SortingsService_2_4, this._FiltersService_2_5);
        this._ListDirective_2_7 = new import14.Wrapper_ListDirective(this._RtList_2_6, this._SortingsService_2_4);
        this._text_3 = this.renderer.createText(this._el_2, '\n    ', null);
        this._el_4 = import4.createRenderElement(this.renderer, this._el_2, 'thead', import4.EMPTY_INLINE_ARRAY, null);
        this._text_5 = this.renderer.createText(this._el_4, '\n      ', null);
        this._el_6 = import4.createRenderElement(this.renderer, this._el_4, 'tr', import4.EMPTY_INLINE_ARRAY, null);
        this._text_7 = this.renderer.createText(this._el_6, '\n        ', null);
        this._el_8 = import4.createRenderElement(this.renderer, this._el_6, 'th', new import4.InlineArray2(2, 'class', 't-col-iata-code'), null);
        this._text_9 = this.renderer.createText(this._el_8, 'IATA', null);
        this._text_10 = this.renderer.createText(this._el_6, '\n        ', null);
        this._el_11 = import4.createRenderElement(this.renderer, this._el_6, 'th', new import4.InlineArray2(2, 'class', 't-col-airport-name'), null);
        this._text_12 = this.renderer.createText(this._el_11, 'Airport name', null);
        this._text_13 = this.renderer.createText(this._el_6, '\n        ', null);
        this._el_14 = import4.createRenderElement(this.renderer, this._el_6, 'th', new import4.InlineArray2(2, 'class', 't-col-city-name'), null);
        this._text_15 = this.renderer.createText(this._el_14, 'City', null);
        this._text_16 = this.renderer.createText(this._el_6, '\n        ', null);
        this._el_17 = import4.createRenderElement(this.renderer, this._el_6, 'th', new import4.InlineArray2(2, 'class', 't-col-country-name'), null);
        this._text_18 = this.renderer.createText(this._el_17, 'Country', null);
        this._text_19 = this.renderer.createText(this._el_6, '\n      ', null);
        this._text_20 = this.renderer.createText(this._el_4, '\n    ', null);
        this._text_21 = this.renderer.createText(this._el_2, '\n    ', null);
        this._el_22 = import4.createRenderElement(this.renderer, this._el_2, 'tbody', new import4.InlineArray2(2, 'rtSelectionArea', ''), null);
        this._RtSelectionService_22_3 = new import15.RtSelectionService();
        this._RtSelectionEventsHelper_22_4 = new import12.RtSelectionEventsHelper(this._RtSelectionService_22_3);
        this._SelectionAreaDirective_22_5 = new import16.Wrapper_SelectionAreaDirective(this._RtSelectionService_22_3, this._RtSelectionEventsHelper_22_4);
        this._query_SelectableDirective_22_0 = new import17.QueryList();
        this._query_SelectionCheckboxForDirective_22_1 = new import17.QueryList();
        this._query_SelectionAreaDirective_22_2 = new import17.QueryList();
        this._text_23 = this.renderer.createText(this._el_22, '\n      ', null);
        this._anchor_24 = this.renderer.createTemplateAnchor(this._el_22, null);
        this._appEl_24 = new import3.AppElement(24, 22, this, this._anchor_24);
        this._TemplateRef_24_5 = new import22.TemplateRef_(this._appEl_24, viewFactory_ReusableBufferedListSampleComponent1);
        this._NgFor_24_6 = new import18.Wrapper_NgFor(this._appEl_24.vcRef, this._TemplateRef_24_5, this.parentInjector.get(import23.IterableDiffers), this.ref);
        this._text_25 = this.renderer.createText(this._el_22, '\n    ', null);
        this._text_26 = this.renderer.createText(this._el_2, '\n    ', null);
        this._el_27 = import4.createRenderElement(this.renderer, this._el_2, 'tfoot', import4.EMPTY_INLINE_ARRAY, null);
        this._text_28 = this.renderer.createText(this._el_27, '\n      ', null);
        this._el_29 = import4.createRenderElement(this.renderer, this._el_27, 'tr', import4.EMPTY_INLINE_ARRAY, null);
        this._text_30 = this.renderer.createText(this._el_29, '\n        ', null);
        this._el_31 = import4.createRenderElement(this.renderer, this._el_29, 'td', new import4.InlineArray2(2, 'colspan', '4'), null);
        this._text_32 = this.renderer.createText(this._el_31, '\n          ', null);
        this._el_33 = import4.createRenderElement(this.renderer, this._el_31, 'rt-demo-buffered-footer', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_33 = new import3.AppElement(33, 31, this, this._el_33);
        this.compView_33 = import20.viewFactory_BufferedFooterComponent0(this.viewUtils, this.injector(33), this._appEl_33);
        this._BufferedFooterComponent_33_4 = new import20.Wrapper_BufferedFooterComponent();
        this._appEl_33.initComponent(this._BufferedFooterComponent_33_4.context, this.compView_33);
        this.compView_33.create(this._BufferedFooterComponent_33_4.context, null);
        this._text_34 = this.renderer.createText(this._el_31, '\n        ', null);
        this._text_35 = this.renderer.createText(this._el_29, '\n      ', null);
        this._text_36 = this.renderer.createText(this._el_27, '\n    ', null);
        this._text_37 = this.renderer.createText(this._el_2, '\n  ', null);
        this._text_38 = this.renderer.createText(this._el_0, '\n', null);
        var disposable_0 = import4.subscribeToRenderElement(this, this._el_22, new import4.InlineArray2(2, 'keydown', null), this.eventHandler(this.handleEvent_22));
        this.init(null, [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._el_8,
            this._text_9,
            this._text_10,
            this._el_11,
            this._text_12,
            this._text_13,
            this._el_14,
            this._text_15,
            this._text_16,
            this._el_17,
            this._text_18,
            this._text_19,
            this._text_20,
            this._text_21,
            this._el_22,
            this._text_23,
            this._anchor_24,
            this._text_25,
            this._text_26,
            this._el_27,
            this._text_28,
            this._el_29,
            this._text_30,
            this._el_31,
            this._text_32,
            this._el_33,
            this._text_34,
            this._text_35,
            this._text_36,
            this._text_37,
            this._text_38
        ], [disposable_0]);
        return null;
    };
    _View_ReusableBufferedListSampleComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import22.TemplateRef) && (24 === requestNodeIndex))) {
            return this._TemplateRef_24_5;
        }
        if (((token === import24.NgFor) && (24 === requestNodeIndex))) {
            return this._NgFor_24_6.context;
        }
        if (((token === import15.RtSelectionService) && ((22 <= requestNodeIndex) && (requestNodeIndex <= 25)))) {
            return this._RtSelectionService_22_3;
        }
        if (((token === import12.RtSelectionEventsHelper) && ((22 <= requestNodeIndex) && (requestNodeIndex <= 25)))) {
            return this._RtSelectionEventsHelper_22_4;
        }
        if (((token === import25.SelectionAreaDirective) && ((22 <= requestNodeIndex) && (requestNodeIndex <= 25)))) {
            return this._SelectionAreaDirective_22_5.context;
        }
        if (((token === import19.BufferedFooterComponent) && (33 === requestNodeIndex))) {
            return this._BufferedFooterComponent_33_4.context;
        }
        if (((token === import11.AsyncSubscriber) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 37)))) {
            return this._AsyncSubscriber_2_3;
        }
        if (((token === import26.SortingsService) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 37)))) {
            return this._SortingsService_2_4;
        }
        if (((token === import27.FiltersService) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 37)))) {
            return this._FiltersService_2_5;
        }
        if (((token === import13.RtList) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 37)))) {
            return this._RtList_2_6;
        }
        if (((token === import28.ListDirective) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 37)))) {
            return this._ListDirective_2_7.context;
        }
        return notFoundResult;
    };
    _View_ReusableBufferedListSampleComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = this.context.loadData;
        this._ListDirective_2_7.check_fetchMethod(currVal_2_0_0, throwOnChange, false);
        this._ListDirective_2_7.ngDoCheck(this, this._el_2, throwOnChange);
        this._SelectionAreaDirective_22_5.ngDoCheck(this, this._el_22, throwOnChange);
        var currVal_24_0_0 = this._ListDirective_2_7.context.items;
        this._NgFor_24_6.check_ngForOf(currVal_24_0_0, throwOnChange, false);
        this._NgFor_24_6.ngDoCheck(this, this._anchor_24, throwOnChange);
        this._BufferedFooterComponent_33_4.ngDoCheck(this, this._el_33, throwOnChange);
        this._appEl_24.detectChangesInNestedViews(throwOnChange);
        if (!throwOnChange) {
            if (this._query_SelectableDirective_22_0.dirty) {
                this._query_SelectableDirective_22_0.reset([this._appEl_24.mapNestedViews(_View_ReusableBufferedListSampleComponent1, function (nestedView) {
                        return [nestedView._SelectableDirective_0_3.context];
                    })]);
                this._SelectionAreaDirective_22_5.context.selectableItems = this._query_SelectableDirective_22_0;
                this._query_SelectableDirective_22_0.notifyOnChanges();
            }
            if (this._query_SelectionCheckboxForDirective_22_1.dirty) {
                this._query_SelectionCheckboxForDirective_22_1.reset([]);
                this._SelectionAreaDirective_22_5.context.childSelectionCheckboxes = this._query_SelectionCheckboxForDirective_22_1;
                this._query_SelectionCheckboxForDirective_22_1.notifyOnChanges();
            }
            if (this._query_SelectionAreaDirective_22_2.dirty) {
                this._query_SelectionAreaDirective_22_2.reset([this._SelectionAreaDirective_22_5.context]);
                this._SelectionAreaDirective_22_5.context.childSelectionAreas = this._query_SelectionAreaDirective_22_2;
                this._query_SelectionAreaDirective_22_2.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._SelectionAreaDirective_22_5.context.ngAfterContentInit();
            }
        }
        this._SelectionAreaDirective_22_5.checkHost(this, this, this._el_22, throwOnChange);
        this.compView_33.detectChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._ListDirective_2_7.context.ngAfterViewInit();
            }
        }
    };
    _View_ReusableBufferedListSampleComponent0.prototype.destroyInternal = function () {
        this._appEl_24.destroyNestedViews();
        this.compView_33.destroy();
        this._SelectionAreaDirective_22_5.ngOnDestroy();
        this._ListDirective_2_7.ngOnDestroy();
    };
    _View_ReusableBufferedListSampleComponent0.prototype.handleEvent_22 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._SelectionAreaDirective_22_5.handleEvent(eventName, $event) && result);
        return result;
    };
    return _View_ReusableBufferedListSampleComponent0;
}(import1.AppView));
function viewFactory_ReusableBufferedListSampleComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ReusableBufferedListSampleComponent === null)) {
        (renderType_ReusableBufferedListSampleComponent = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, styles_ReusableBufferedListSampleComponent, {}));
    }
    return new _View_ReusableBufferedListSampleComponent0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_ReusableBufferedListSampleComponent0 = viewFactory_ReusableBufferedListSampleComponent0;
var _View_ReusableBufferedListSampleComponent1 = (function (_super) {
    __extends(_View_ReusableBufferedListSampleComponent1, _super);
    function _View_ReusableBufferedListSampleComponent1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ReusableBufferedListSampleComponent1, renderType_ReusableBufferedListSampleComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
        this._expr_15 = import7.UNINITIALIZED;
        this._expr_16 = import7.UNINITIALIZED;
        this._expr_17 = import7.UNINITIALIZED;
        this._expr_18 = import7.UNINITIALIZED;
        this._expr_19 = import7.UNINITIALIZED;
    }
    _View_ReusableBufferedListSampleComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import4.createRenderElement(this.renderer, null, 'tr', import4.EMPTY_INLINE_ARRAY, null);
        this._SelectableDirective_0_3 = new import29.Wrapper_SelectableDirective(this.parent._RtSelectionEventsHelper_22_4);
        this._text_1 = this.renderer.createText(this._el_0, '\n        ', null);
        this._el_2 = import4.createRenderElement(this.renderer, this._el_0, 'td', import4.EMPTY_INLINE_ARRAY, null);
        this._text_3 = this.renderer.createText(this._el_2, '', null);
        this._text_4 = this.renderer.createText(this._el_0, '\n        ', null);
        this._el_5 = import4.createRenderElement(this.renderer, this._el_0, 'td', import4.EMPTY_INLINE_ARRAY, null);
        this._text_6 = this.renderer.createText(this._el_5, '', null);
        this._text_7 = this.renderer.createText(this._el_0, '\n        ', null);
        this._el_8 = import4.createRenderElement(this.renderer, this._el_0, 'td', import4.EMPTY_INLINE_ARRAY, null);
        this._text_9 = this.renderer.createText(this._el_8, '', null);
        this._text_10 = this.renderer.createText(this._el_0, '\n        ', null);
        this._el_11 = import4.createRenderElement(this.renderer, this._el_0, 'td', import4.EMPTY_INLINE_ARRAY, null);
        this._text_12 = this.renderer.createText(this._el_11, '', null);
        this._text_13 = this.renderer.createText(this._el_0, '\n      ', null);
        var disposable_0 = import4.subscribeToRenderElement(this, this._el_0, new import4.InlineArray2(2, 'mouseup', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._text_7,
            this._el_8,
            this._text_9,
            this._text_10,
            this._el_11,
            this._text_12,
            this._text_13
        ], [disposable_0]);
        return null;
    };
    _View_ReusableBufferedListSampleComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import30.SelectableDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 13)))) {
            return this._SelectableDirective_0_3.context;
        }
        return notFoundResult;
    };
    _View_ReusableBufferedListSampleComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.context.$implicit;
        this._SelectableDirective_0_3.check_item(currVal_0_0_0, throwOnChange, false);
        this._SelectableDirective_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_15 = this._SelectableDirective_0_3.context.selected;
        if (import4.checkBinding(throwOnChange, this._expr_15, currVal_15)) {
            this.renderer.setElementClass(this._el_0, 'selected', currVal_15);
            this._expr_15 = currVal_15;
        }
        var currVal_16 = import4.interpolate(1, '', this.context.$implicit.iataCode, '');
        if (import4.checkBinding(throwOnChange, this._expr_16, currVal_16)) {
            this.renderer.setText(this._text_3, currVal_16);
            this._expr_16 = currVal_16;
        }
        var currVal_17 = import4.interpolate(1, '', this.context.$implicit.name, '');
        if (import4.checkBinding(throwOnChange, this._expr_17, currVal_17)) {
            this.renderer.setText(this._text_6, currVal_17);
            this._expr_17 = currVal_17;
        }
        var currVal_18 = import4.interpolate(1, '', this.context.$implicit.cityName, '');
        if (import4.checkBinding(throwOnChange, this._expr_18, currVal_18)) {
            this.renderer.setText(this._text_9, currVal_18);
            this._expr_18 = currVal_18;
        }
        var currVal_19 = import4.interpolate(1, '', this.context.$implicit.countryName, '');
        if (import4.checkBinding(throwOnChange, this._expr_19, currVal_19)) {
            this.renderer.setText(this._text_12, currVal_19);
            this._expr_19 = currVal_19;
        }
    };
    _View_ReusableBufferedListSampleComponent1.prototype.dirtyParentQueriesInternal = function () {
        this.parent._query_SelectableDirective_22_0.setDirty();
    };
    _View_ReusableBufferedListSampleComponent1.prototype.destroyInternal = function () {
        this._SelectableDirective_0_3.ngOnDestroy();
    };
    _View_ReusableBufferedListSampleComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    _View_ReusableBufferedListSampleComponent1.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._SelectableDirective_0_3.handleEvent(eventName, $event) && result);
        return result;
    };
    return _View_ReusableBufferedListSampleComponent1;
}(import1.AppView));
function viewFactory_ReusableBufferedListSampleComponent1(viewUtils, parentInjector, declarationEl) {
    return new _View_ReusableBufferedListSampleComponent1(viewUtils, parentInjector, declarationEl);
}


/***/ },

/***/ "./src/compiled/src/app/+paging-and-state/state-components/state-components.component.ngfactory.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var import0 = __webpack_require__("./src/app/+paging-and-state/state-components/state-components.component.ts");
var import1 = __webpack_require__("./node_modules/@angular/core/src/linker/view.js");
var import3 = __webpack_require__("./node_modules/@angular/core/src/linker/element.js");
var import4 = __webpack_require__("./node_modules/@angular/core/src/linker/view_utils.js");
var import6 = __webpack_require__("./node_modules/@angular/core/src/linker/view_type.js");
var import7 = __webpack_require__("./node_modules/@angular/core/src/change_detection/change_detection.js");
var import8 = __webpack_require__("./src/app/shared/data/airports.service.ts");
var import9 = __webpack_require__("./node_modules/@angular/core/src/metadata/view.js");
var import10 = __webpack_require__("./node_modules/@angular/core/src/linker/component_factory.js");
var import11 = __webpack_require__("./node_modules/@angular/core/src/linker/query_list.js");
var import12 = __webpack_require__("./node_modules/right-angled/src/core/async-subscriber.js");
var import13 = __webpack_require__("./node_modules/right-angled/src/core/providers.js");
var import14 = __webpack_require__("./node_modules/right-angled/src/core/list.js");
var import15 = __webpack_require__("./src/compiled/node_modules/right-angled/src/list-directives/list.directive.ngfactory.ts");
var import16 = __webpack_require__("./src/compiled/node_modules/right-angled/src/list-directives/sort.directive.ngfactory.ts");
var import17 = __webpack_require__("./src/compiled/node_modules/@angular/common/src/directives/ng_for.ngfactory.ts");
var import18 = __webpack_require__("./node_modules/right-angled/src/list-state-components/list-state-initial.component.js");
var import19 = __webpack_require__("./src/compiled/node_modules/right-angled/src/list-state-components/list-state-initial.component.ngfactory.ts");
var import20 = __webpack_require__("./node_modules/right-angled/src/list-state-components/list-state-in-progress.component.js");
var import21 = __webpack_require__("./src/compiled/node_modules/right-angled/src/list-state-components/list-state-in-progress.component.ngfactory.ts");
var import22 = __webpack_require__("./node_modules/right-angled/src/list-state-components/list-state-no-data.component.js");
var import23 = __webpack_require__("./src/compiled/node_modules/right-angled/src/list-state-components/list-state-no-data.component.ngfactory.ts");
var import24 = __webpack_require__("./node_modules/right-angled/src/list-state-components/list-state-request-cancelled.component.js");
var import25 = __webpack_require__("./src/compiled/node_modules/right-angled/src/list-state-components/list-state-request-cancelled.component.ngfactory.ts");
var import26 = __webpack_require__("./node_modules/right-angled/src/list-state-components/list-state-failed.component.js");
var import27 = __webpack_require__("./src/compiled/node_modules/right-angled/src/list-state-components/list-state-failed.component.ngfactory.ts");
var import28 = __webpack_require__("./node_modules/right-angled/src/list-state-components/list-state-done.component.js");
var import29 = __webpack_require__("./src/compiled/node_modules/right-angled/src/list-state-components/list-state-done.component.ngfactory.ts");
var import30 = __webpack_require__("./node_modules/right-angled/src/core/state-service.js");
var import31 = __webpack_require__("./node_modules/@angular/core/src/linker/element_ref.js");
var import32 = __webpack_require__("./node_modules/@angular/core/src/change_detection/differs/iterable_differs.js");
var import33 = __webpack_require__("./node_modules/@angular/core/src/linker/template_ref.js");
var import34 = __webpack_require__("./node_modules/@angular/core/src/change_detection/differs/keyvalue_differs.js");
var import35 = __webpack_require__("./node_modules/right-angled/src/list-directives/sort.directive.js");
var import36 = __webpack_require__("./node_modules/@angular/common/src/directives/ng_for.js");
var import37 = __webpack_require__("./node_modules/e2e4/src/sortings-service.js");
var import38 = __webpack_require__("./node_modules/e2e4/src/filters-service.js");
var import39 = __webpack_require__("./node_modules/right-angled/src/list-directives/list.directive.js");
var Wrapper_StateComponentsComponent = (function () {
    function Wrapper_StateComponentsComponent(p0) {
        this._changed = false;
        this.context = new import0.StateComponentsComponent(p0);
    }
    Wrapper_StateComponentsComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_StateComponentsComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_StateComponentsComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_StateComponentsComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_StateComponentsComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_StateComponentsComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_StateComponentsComponent;
}());
exports.Wrapper_StateComponentsComponent = Wrapper_StateComponentsComponent;
var renderType_StateComponentsComponent_Host = null;
var _View_StateComponentsComponent_Host0 = (function (_super) {
    __extends(_View_StateComponentsComponent_Host0, _super);
    function _View_StateComponentsComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_StateComponentsComponent_Host0, renderType_StateComponentsComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_StateComponentsComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer, 'rt-demo-state-components', import4.EMPTY_INLINE_ARRAY, rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        this.compView_0 = viewFactory_StateComponentsComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._StateComponentsComponent_0_4 = new Wrapper_StateComponentsComponent(this.parentInjector.get(import8.AirportsService));
        this._appEl_0.initComponent(this._StateComponentsComponent_0_4.context, this.compView_0);
        this.compView_0.create(this._StateComponentsComponent_0_4.context, null);
        this.init(this._el_0, [this._el_0], null);
        return this._appEl_0;
    };
    _View_StateComponentsComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.StateComponentsComponent) && (0 === requestNodeIndex))) {
            return this._StateComponentsComponent_0_4.context;
        }
        return notFoundResult;
    };
    _View_StateComponentsComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._StateComponentsComponent_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    _View_StateComponentsComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    _View_StateComponentsComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return _View_StateComponentsComponent_Host0;
}(import1.AppView));
function viewFactory_StateComponentsComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_StateComponentsComponent_Host === null)) {
        (renderType_StateComponentsComponent_Host = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, [], {}));
    }
    return new _View_StateComponentsComponent_Host0(viewUtils, parentInjector, declarationEl);
}
exports.StateComponentsComponentNgFactory = new import10.ComponentFactory('rt-demo-state-components', viewFactory_StateComponentsComponent_Host0, import0.StateComponentsComponent);
var styles_StateComponentsComponent = [];
var renderType_StateComponentsComponent = null;
var _View_StateComponentsComponent0 = (function (_super) {
    __extends(_View_StateComponentsComponent0, _super);
    function _View_StateComponentsComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_StateComponentsComponent0, renderType_StateComponentsComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
        this._expr_120 = import7.UNINITIALIZED;
        this._expr_121 = import7.UNINITIALIZED;
    }
    _View_StateComponentsComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._viewQuery_ListDirective_0 = new import11.QueryList();
        this._el_0 = import4.createRenderElement(this.renderer, parentRenderNode, 'div', new import4.InlineArray2(2, 'class', 'toolbar'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n	', null);
        this._el_2 = import4.createRenderElement(this.renderer, this._el_0, 'ul', import4.EMPTY_INLINE_ARRAY, null);
        this._text_3 = this.renderer.createText(this._el_2, '\n		', null);
        this._el_4 = import4.createRenderElement(this.renderer, this._el_2, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._text_5 = this.renderer.createText(this._el_4, '\n			', null);
        this._el_6 = import4.createRenderElement(this.renderer, this._el_4, 'button', new import4.InlineArray4(4, 'class', 'btn btn-primary', 'type', 'button'), null);
        this._text_7 = this.renderer.createText(this._el_6, 'Load data', null);
        this._text_8 = this.renderer.createText(this._el_4, '\n		', null);
        this._text_9 = this.renderer.createText(this._el_2, '\n		', null);
        this._el_10 = import4.createRenderElement(this.renderer, this._el_2, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._text_11 = this.renderer.createText(this._el_10, '\n			', null);
        this._el_12 = import4.createRenderElement(this.renderer, this._el_10, 'button', new import4.InlineArray4(4, 'class', 'btn btn-primary', 'type', 'button'), null);
        this._text_13 = this.renderer.createText(this._el_12, 'Cancel loading', null);
        this._text_14 = this.renderer.createText(this._el_10, '\n		', null);
        this._text_15 = this.renderer.createText(this._el_2, '\n		', null);
        this._el_16 = import4.createRenderElement(this.renderer, this._el_2, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._text_17 = this.renderer.createText(this._el_16, '\n			', null);
        this._el_18 = import4.createRenderElement(this.renderer, this._el_16, 'button', new import4.InlineArray4(4, 'class', 'btn btn-primary', 'type', 'button'), null);
        this._text_19 = this.renderer.createText(this._el_18, 'Raise error on load', null);
        this._text_20 = this.renderer.createText(this._el_16, '\n		', null);
        this._text_21 = this.renderer.createText(this._el_2, '\n		', null);
        this._el_22 = import4.createRenderElement(this.renderer, this._el_2, 'li', import4.EMPTY_INLINE_ARRAY, null);
        this._text_23 = this.renderer.createText(this._el_22, '\n			', null);
        this._el_24 = import4.createRenderElement(this.renderer, this._el_22, 'button', new import4.InlineArray4(4, 'class', 'btn btn-primary', 'type', 'button'), null);
        this._text_25 = this.renderer.createText(this._el_24, 'Load empty list', null);
        this._text_26 = this.renderer.createText(this._el_22, '\n		', null);
        this._text_27 = this.renderer.createText(this._el_2, '\n	', null);
        this._text_28 = this.renderer.createText(this._el_0, '\n', null);
        this._text_29 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_30 = import4.createRenderElement(this.renderer, parentRenderNode, 'div', new import4.InlineArray2(2, 'class', 'table-responsive'), null);
        this._text_31 = this.renderer.createText(this._el_30, '\n	', null);
        this._el_32 = import4.createRenderElement(this.renderer, this._el_30, 'table', new import4.InlineArray2(2, 'class', 'table table-striped'), null);
        this._AsyncSubscriber_32_3 = new import12.AsyncSubscriber();
        this._SortingsService_32_4 = new import13.RtSortingsService();
        this._FiltersService_32_5 = new import13.RtFiltersService();
        this._RtList_32_6 = new import14.RtList(this._AsyncSubscriber_32_3, this.parentInjector.get(import30.RtStateService, null), this._SortingsService_32_4, this._FiltersService_32_5);
        this._ListDirective_32_7 = new import15.Wrapper_ListDirective(this._RtList_32_6, this._SortingsService_32_4);
        this._text_33 = this.renderer.createText(this._el_32, '\n		', null);
        this._el_34 = import4.createRenderElement(this.renderer, this._el_32, 'thead', import4.EMPTY_INLINE_ARRAY, null);
        this._text_35 = this.renderer.createText(this._el_34, '\n			', null);
        this._el_36 = import4.createRenderElement(this.renderer, this._el_34, 'tr', import4.EMPTY_INLINE_ARRAY, null);
        this._text_37 = this.renderer.createText(this._el_36, '\n				', null);
        this._el_38 = import4.createRenderElement(this.renderer, this._el_36, 'th', import4.EMPTY_INLINE_ARRAY, null);
        this._el_39 = import4.createRenderElement(this.renderer, this._el_38, 'span', new import4.InlineArray2(2, 'rtSort', 'iataCode'), null);
        this._SortDirective_39_3 = new import16.Wrapper_SortDirective(this._RtList_32_6, this._SortingsService_32_4, this.renderer, new import31.ElementRef(this._el_39), this.parentInjector.get(import32.IterableDiffers));
        this._text_40 = this.renderer.createText(this._el_39, 'IATA', null);
        this._text_41 = this.renderer.createText(this._el_36, '\n				', null);
        this._el_42 = import4.createRenderElement(this.renderer, this._el_36, 'th', import4.EMPTY_INLINE_ARRAY, null);
        this._el_43 = import4.createRenderElement(this.renderer, this._el_42, 'span', new import4.InlineArray2(2, 'rtSort', 'name'), null);
        this._SortDirective_43_3 = new import16.Wrapper_SortDirective(this._RtList_32_6, this._SortingsService_32_4, this.renderer, new import31.ElementRef(this._el_43), this.parentInjector.get(import32.IterableDiffers));
        this._text_44 = this.renderer.createText(this._el_43, 'Airport name', null);
        this._text_45 = this.renderer.createText(this._el_36, '\n				', null);
        this._el_46 = import4.createRenderElement(this.renderer, this._el_36, 'th', import4.EMPTY_INLINE_ARRAY, null);
        this._el_47 = import4.createRenderElement(this.renderer, this._el_46, 'span', new import4.InlineArray2(2, 'rtSort', 'countryName'), null);
        this._SortDirective_47_3 = new import16.Wrapper_SortDirective(this._RtList_32_6, this._SortingsService_32_4, this.renderer, new import31.ElementRef(this._el_47), this.parentInjector.get(import32.IterableDiffers));
        this._text_48 = this.renderer.createText(this._el_47, 'Country', null);
        this._text_49 = this.renderer.createText(this._el_36, '\n			', null);
        this._text_50 = this.renderer.createText(this._el_34, '\n		', null);
        this._text_51 = this.renderer.createText(this._el_32, '\n		', null);
        this._el_52 = import4.createRenderElement(this.renderer, this._el_32, 'tbody', import4.EMPTY_INLINE_ARRAY, null);
        this._text_53 = this.renderer.createText(this._el_52, '\n			', null);
        this._anchor_54 = this.renderer.createTemplateAnchor(this._el_52, null);
        this._appEl_54 = new import3.AppElement(54, 52, this, this._anchor_54);
        this._TemplateRef_54_5 = new import33.TemplateRef_(this._appEl_54, viewFactory_StateComponentsComponent1);
        this._NgFor_54_6 = new import17.Wrapper_NgFor(this._appEl_54.vcRef, this._TemplateRef_54_5, this.parentInjector.get(import32.IterableDiffers), this.ref);
        this._text_55 = this.renderer.createText(this._el_52, '\n		', null);
        this._text_56 = this.renderer.createText(this._el_32, '\n		', null);
        this._el_57 = import4.createRenderElement(this.renderer, this._el_32, 'tfoot', import4.EMPTY_INLINE_ARRAY, null);
        this._text_58 = this.renderer.createText(this._el_57, '\n			', null);
        this._el_59 = import4.createRenderElement(this.renderer, this._el_57, 'tr', import4.EMPTY_INLINE_ARRAY, null);
        this._text_60 = this.renderer.createText(this._el_59, '\n				', null);
        this._el_61 = import4.createRenderElement(this.renderer, this._el_59, 'td', new import4.InlineArray2(2, 'colspan', '3'), null);
        this._text_62 = this.renderer.createText(this._el_61, '\n					', null);
        this._el_63 = import4.createRenderElement(this.renderer, this._el_61, 'rt-list-state-initial', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_63 = new import3.AppElement(63, 61, this, this._el_63);
        this.compView_63 = import19.viewFactory_ListStateInitialComponent0(this.viewUtils, this.injector(63), this._appEl_63);
        this._ListStateInitialComponent_63_4 = new import19.Wrapper_ListStateInitialComponent(this._RtList_32_6, this.parentInjector.get(import34.KeyValueDiffers));
        this._appEl_63.initComponent(this._ListStateInitialComponent_63_4.context, this.compView_63);
        this._text_64 = this.renderer.createText(null, '\n						Пока ничего не произошло. Нажмите любую из кнопок вверху\n					', null);
        this.compView_63.create(this._ListStateInitialComponent_63_4.context, null);
        this._text_65 = this.renderer.createText(this._el_61, '\n					', null);
        this._text_66 = this.renderer.createText(this._el_61, '\n					', null);
        this._el_67 = import4.createRenderElement(this.renderer, this._el_61, 'rt-list-state-progress', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_67 = new import3.AppElement(67, 61, this, this._el_67);
        this.compView_67 = import21.viewFactory_ListStateInProgressComponent0(this.viewUtils, this.injector(67), this._appEl_67);
        this._ListStateInProgressComponent_67_4 = new import21.Wrapper_ListStateInProgressComponent(this._RtList_32_6, this.parentInjector.get(import34.KeyValueDiffers));
        this._appEl_67.initComponent(this._ListStateInProgressComponent_67_4.context, this.compView_67);
        this._text_68 = this.renderer.createText(null, '\n						Загружаю данные...\n					', null);
        this.compView_67.create(this._ListStateInProgressComponent_67_4.context, null);
        this._text_69 = this.renderer.createText(this._el_61, '\n					', null);
        this._text_70 = this.renderer.createText(this._el_61, '\n					', null);
        this._el_71 = import4.createRenderElement(this.renderer, this._el_61, 'rt-list-state-no-data', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_71 = new import3.AppElement(71, 61, this, this._el_71);
        this.compView_71 = import23.viewFactory_ListStateNoDataComponent0(this.viewUtils, this.injector(71), this._appEl_71);
        this._ListStateNoDataComponent_71_4 = new import23.Wrapper_ListStateNoDataComponent(this._RtList_32_6, this.parentInjector.get(import34.KeyValueDiffers));
        this._appEl_71.initComponent(this._ListStateNoDataComponent_71_4.context, this.compView_71);
        this._text_72 = this.renderer.createText(null, '\n						Данные не найдены\n					', null);
        this.compView_71.create(this._ListStateNoDataComponent_71_4.context, null);
        this._text_73 = this.renderer.createText(this._el_61, '\n					', null);
        this._text_74 = this.renderer.createText(this._el_61, '\n					', null);
        this._el_75 = import4.createRenderElement(this.renderer, this._el_61, 'rt-list-state-request-cancelled', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_75 = new import3.AppElement(75, 61, this, this._el_75);
        this.compView_75 = import25.viewFactory_ListStateRequestCancelledComponent0(this.viewUtils, this.injector(75), this._appEl_75);
        this._ListStateRequestCancelledComponent_75_4 = new import25.Wrapper_ListStateRequestCancelledComponent(this._RtList_32_6, this.parentInjector.get(import34.KeyValueDiffers));
        this._appEl_75.initComponent(this._ListStateRequestCancelledComponent_75_4.context, this.compView_75);
        this._text_76 = this.renderer.createText(null, '\n						Запрос был отменен\n					', null);
        this.compView_75.create(this._ListStateRequestCancelledComponent_75_4.context, null);
        this._text_77 = this.renderer.createText(this._el_61, '\n					', null);
        this._text_78 = this.renderer.createText(this._el_61, '\n					', null);
        this._el_79 = import4.createRenderElement(this.renderer, this._el_61, 'rt-list-state-failed', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_79 = new import3.AppElement(79, 61, this, this._el_79);
        this.compView_79 = import27.viewFactory_ListStateFailedComponent0(this.viewUtils, this.injector(79), this._appEl_79);
        this._ListStateFailedComponent_79_4 = new import27.Wrapper_ListStateFailedComponent(this._RtList_32_6, this.parentInjector.get(import34.KeyValueDiffers));
        this._appEl_79.initComponent(this._ListStateFailedComponent_79_4.context, this.compView_79);
        this._text_80 = this.renderer.createText(null, '\n						При запросе данных произошла ошибка\n					', null);
        this.compView_79.create(this._ListStateFailedComponent_79_4.context, null);
        this._text_81 = this.renderer.createText(this._el_61, '\n					', null);
        this._text_82 = this.renderer.createText(this._el_61, '\n					', null);
        this._el_83 = import4.createRenderElement(this.renderer, this._el_61, 'rt-list-state-done', import4.EMPTY_INLINE_ARRAY, null);
        this._appEl_83 = new import3.AppElement(83, 61, this, this._el_83);
        this.compView_83 = import29.viewFactory_ListStateDoneComponent0(this.viewUtils, this.injector(83), this._appEl_83);
        this._ListStateDoneComponent_83_4 = new import29.Wrapper_ListStateDoneComponent(this._RtList_32_6, this.parentInjector.get(import34.KeyValueDiffers));
        this._appEl_83.initComponent(this._ListStateDoneComponent_83_4.context, this.compView_83);
        this._text_84 = this.renderer.createText(null, '\n						Данные успешно загружены\n					', null);
        this.compView_83.create(this._ListStateDoneComponent_83_4.context, null);
        this._text_85 = this.renderer.createText(this._el_61, '\n				', null);
        this._text_86 = this.renderer.createText(this._el_59, '\n			', null);
        this._text_87 = this.renderer.createText(this._el_57, '\n		', null);
        this._text_88 = this.renderer.createText(this._el_32, '\n	', null);
        this._text_89 = this.renderer.createText(this._el_30, '\n', null);
        var disposable_0 = import4.subscribeToRenderElement(this, this._el_6, new import4.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_6));
        var disposable_1 = import4.subscribeToRenderElement(this, this._el_12, new import4.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_12));
        var disposable_2 = import4.subscribeToRenderElement(this, this._el_18, new import4.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_18));
        var disposable_3 = import4.subscribeToRenderElement(this, this._el_24, new import4.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_24));
        var disposable_4 = import4.subscribeToRenderElement(this, this._el_39, new import4.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_39));
        var disposable_5 = import4.subscribeToRenderElement(this, this._el_43, new import4.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_43));
        var disposable_6 = import4.subscribeToRenderElement(this, this._el_47, new import4.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_47));
        this._viewQuery_ListDirective_0.reset([this._ListDirective_32_7.context]);
        this.context.listDirective = this._viewQuery_ListDirective_0.first;
        this.init(null, [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._text_8,
            this._text_9,
            this._el_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._text_14,
            this._text_15,
            this._el_16,
            this._text_17,
            this._el_18,
            this._text_19,
            this._text_20,
            this._text_21,
            this._el_22,
            this._text_23,
            this._el_24,
            this._text_25,
            this._text_26,
            this._text_27,
            this._text_28,
            this._text_29,
            this._el_30,
            this._text_31,
            this._el_32,
            this._text_33,
            this._el_34,
            this._text_35,
            this._el_36,
            this._text_37,
            this._el_38,
            this._el_39,
            this._text_40,
            this._text_41,
            this._el_42,
            this._el_43,
            this._text_44,
            this._text_45,
            this._el_46,
            this._el_47,
            this._text_48,
            this._text_49,
            this._text_50,
            this._text_51,
            this._el_52,
            this._text_53,
            this._anchor_54,
            this._text_55,
            this._text_56,
            this._el_57,
            this._text_58,
            this._el_59,
            this._text_60,
            this._el_61,
            this._text_62,
            this._el_63,
            this._text_64,
            this._text_65,
            this._text_66,
            this._el_67,
            this._text_68,
            this._text_69,
            this._text_70,
            this._el_71,
            this._text_72,
            this._text_73,
            this._text_74,
            this._el_75,
            this._text_76,
            this._text_77,
            this._text_78,
            this._el_79,
            this._text_80,
            this._text_81,
            this._text_82,
            this._el_83,
            this._text_84,
            this._text_85,
            this._text_86,
            this._text_87,
            this._text_88,
            this._text_89
        ], [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3,
            disposable_4,
            disposable_5,
            disposable_6
        ]);
        return null;
    };
    _View_StateComponentsComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import35.SortDirective) && ((39 <= requestNodeIndex) && (requestNodeIndex <= 40)))) {
            return this._SortDirective_39_3.context;
        }
        if (((token === import35.SortDirective) && ((43 <= requestNodeIndex) && (requestNodeIndex <= 44)))) {
            return this._SortDirective_43_3.context;
        }
        if (((token === import35.SortDirective) && ((47 <= requestNodeIndex) && (requestNodeIndex <= 48)))) {
            return this._SortDirective_47_3.context;
        }
        if (((token === import33.TemplateRef) && (54 === requestNodeIndex))) {
            return this._TemplateRef_54_5;
        }
        if (((token === import36.NgFor) && (54 === requestNodeIndex))) {
            return this._NgFor_54_6.context;
        }
        if (((token === import18.ListStateInitialComponent) && ((63 <= requestNodeIndex) && (requestNodeIndex <= 64)))) {
            return this._ListStateInitialComponent_63_4.context;
        }
        if (((token === import20.ListStateInProgressComponent) && ((67 <= requestNodeIndex) && (requestNodeIndex <= 68)))) {
            return this._ListStateInProgressComponent_67_4.context;
        }
        if (((token === import22.ListStateNoDataComponent) && ((71 <= requestNodeIndex) && (requestNodeIndex <= 72)))) {
            return this._ListStateNoDataComponent_71_4.context;
        }
        if (((token === import24.ListStateRequestCancelledComponent) && ((75 <= requestNodeIndex) && (requestNodeIndex <= 76)))) {
            return this._ListStateRequestCancelledComponent_75_4.context;
        }
        if (((token === import26.ListStateFailedComponent) && ((79 <= requestNodeIndex) && (requestNodeIndex <= 80)))) {
            return this._ListStateFailedComponent_79_4.context;
        }
        if (((token === import28.ListStateDoneComponent) && ((83 <= requestNodeIndex) && (requestNodeIndex <= 84)))) {
            return this._ListStateDoneComponent_83_4.context;
        }
        if (((token === import12.AsyncSubscriber) && ((32 <= requestNodeIndex) && (requestNodeIndex <= 88)))) {
            return this._AsyncSubscriber_32_3;
        }
        if (((token === import37.SortingsService) && ((32 <= requestNodeIndex) && (requestNodeIndex <= 88)))) {
            return this._SortingsService_32_4;
        }
        if (((token === import38.FiltersService) && ((32 <= requestNodeIndex) && (requestNodeIndex <= 88)))) {
            return this._FiltersService_32_5;
        }
        if (((token === import14.RtList) && ((32 <= requestNodeIndex) && (requestNodeIndex <= 88)))) {
            return this._RtList_32_6;
        }
        if (((token === import39.ListDirective) && ((32 <= requestNodeIndex) && (requestNodeIndex <= 88)))) {
            return this._ListDirective_32_7.context;
        }
        return notFoundResult;
    };
    _View_StateComponentsComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_32_0_0 = false;
        this._ListDirective_32_7.check_loadOnInit(currVal_32_0_0, throwOnChange, false);
        var currVal_32_0_1 = this.context.loadData;
        this._ListDirective_32_7.check_fetchMethod(currVal_32_0_1, throwOnChange, false);
        this._ListDirective_32_7.ngDoCheck(this, this._el_32, throwOnChange);
        var currVal_39_0_0 = 'iataCode';
        this._SortDirective_39_3.check_fieldName(currVal_39_0_0, throwOnChange, false);
        this._SortDirective_39_3.ngDoCheck(this, this._el_39, throwOnChange);
        var currVal_43_0_0 = 'name';
        this._SortDirective_43_3.check_fieldName(currVal_43_0_0, throwOnChange, false);
        this._SortDirective_43_3.ngDoCheck(this, this._el_43, throwOnChange);
        var currVal_47_0_0 = 'countryName';
        this._SortDirective_47_3.check_fieldName(currVal_47_0_0, throwOnChange, false);
        this._SortDirective_47_3.ngDoCheck(this, this._el_47, throwOnChange);
        var currVal_54_0_0 = this._ListDirective_32_7.context.items;
        this._NgFor_54_6.check_ngForOf(currVal_54_0_0, throwOnChange, false);
        this._NgFor_54_6.ngDoCheck(this, this._anchor_54, throwOnChange);
        this._ListStateInitialComponent_63_4.ngDoCheck(this, this._el_63, throwOnChange);
        this._ListStateInProgressComponent_67_4.ngDoCheck(this, this._el_67, throwOnChange);
        this._ListStateNoDataComponent_71_4.ngDoCheck(this, this._el_71, throwOnChange);
        this._ListStateRequestCancelledComponent_75_4.ngDoCheck(this, this._el_75, throwOnChange);
        this._ListStateFailedComponent_79_4.ngDoCheck(this, this._el_79, throwOnChange);
        this._ListStateDoneComponent_83_4.ngDoCheck(this, this._el_83, throwOnChange);
        this._appEl_54.detectChangesInNestedViews(throwOnChange);
        var currVal_120 = this._ListDirective_32_7.context.busy;
        if (import4.checkBinding(throwOnChange, this._expr_120, currVal_120)) {
            this.renderer.setElementProperty(this._el_6, 'disabled', currVal_120);
            this._expr_120 = currVal_120;
        }
        var currVal_121 = this._ListDirective_32_7.context.ready;
        if (import4.checkBinding(throwOnChange, this._expr_121, currVal_121)) {
            this.renderer.setElementProperty(this._el_12, 'disabled', currVal_121);
            this._expr_121 = currVal_121;
        }
        this.compView_63.detectChanges(throwOnChange);
        this.compView_67.detectChanges(throwOnChange);
        this.compView_71.detectChanges(throwOnChange);
        this.compView_75.detectChanges(throwOnChange);
        this.compView_79.detectChanges(throwOnChange);
        this.compView_83.detectChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._ListDirective_32_7.context.ngAfterViewInit();
            }
        }
    };
    _View_StateComponentsComponent0.prototype.destroyInternal = function () {
        this._appEl_54.destroyNestedViews();
        this.compView_63.destroy();
        this.compView_67.destroy();
        this.compView_71.destroy();
        this.compView_75.destroy();
        this.compView_79.destroy();
        this.compView_83.destroy();
        this._ListDirective_32_7.ngOnDestroy();
    };
    _View_StateComponentsComponent0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 63) && (ngContentIndex == 0))) {
            cb(this._text_64, ctx);
        }
        if (((nodeIndex == 67) && (ngContentIndex == 0))) {
            cb(this._text_68, ctx);
        }
        if (((nodeIndex == 71) && (ngContentIndex == 0))) {
            cb(this._text_72, ctx);
        }
        if (((nodeIndex == 75) && (ngContentIndex == 0))) {
            cb(this._text_76, ctx);
        }
        if (((nodeIndex == 79) && (ngContentIndex == 0))) {
            cb(this._text_80, ctx);
        }
        if (((nodeIndex == 83) && (ngContentIndex == 0))) {
            cb(this._text_84, ctx);
        }
    };
    _View_StateComponentsComponent0.prototype.handleEvent_6 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this._ListDirective_32_7.context.loadData() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    _View_StateComponentsComponent0.prototype.handleEvent_12 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this._ListDirective_32_7.context.cancelRequests() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    _View_StateComponentsComponent0.prototype.handleEvent_18 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.raiseErrorOnLoad() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    _View_StateComponentsComponent0.prototype.handleEvent_24 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.loadEmptyData() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    _View_StateComponentsComponent0.prototype.handleEvent_39 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._SortDirective_39_3.handleEvent(eventName, $event) && result);
        return result;
    };
    _View_StateComponentsComponent0.prototype.handleEvent_43 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._SortDirective_43_3.handleEvent(eventName, $event) && result);
        return result;
    };
    _View_StateComponentsComponent0.prototype.handleEvent_47 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._SortDirective_47_3.handleEvent(eventName, $event) && result);
        return result;
    };
    return _View_StateComponentsComponent0;
}(import1.AppView));
function viewFactory_StateComponentsComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_StateComponentsComponent === null)) {
        (renderType_StateComponentsComponent = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, styles_StateComponentsComponent, {}));
    }
    return new _View_StateComponentsComponent0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_StateComponentsComponent0 = viewFactory_StateComponentsComponent0;
var _View_StateComponentsComponent1 = (function (_super) {
    __extends(_View_StateComponentsComponent1, _super);
    function _View_StateComponentsComponent1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_StateComponentsComponent1, renderType_StateComponentsComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
        this._expr_11 = import7.UNINITIALIZED;
        this._expr_12 = import7.UNINITIALIZED;
        this._expr_13 = import7.UNINITIALIZED;
    }
    _View_StateComponentsComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import4.createRenderElement(this.renderer, null, 'tr', import4.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '\n				', null);
        this._el_2 = import4.createRenderElement(this.renderer, this._el_0, 'td', import4.EMPTY_INLINE_ARRAY, null);
        this._text_3 = this.renderer.createText(this._el_2, '', null);
        this._text_4 = this.renderer.createText(this._el_0, '\n				', null);
        this._el_5 = import4.createRenderElement(this.renderer, this._el_0, 'td', import4.EMPTY_INLINE_ARRAY, null);
        this._text_6 = this.renderer.createText(this._el_5, '', null);
        this._text_7 = this.renderer.createText(this._el_0, '\n				', null);
        this._el_8 = import4.createRenderElement(this.renderer, this._el_0, 'td', import4.EMPTY_INLINE_ARRAY, null);
        this._text_9 = this.renderer.createText(this._el_8, '', null);
        this._text_10 = this.renderer.createText(this._el_0, '\n			', null);
        this.init(this._el_0, [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._text_7,
            this._el_8,
            this._text_9,
            this._text_10
        ], null);
        return null;
    };
    _View_StateComponentsComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_11 = import4.interpolate(1, '', this.context.$implicit.iataCode, '');
        if (import4.checkBinding(throwOnChange, this._expr_11, currVal_11)) {
            this.renderer.setText(this._text_3, currVal_11);
            this._expr_11 = currVal_11;
        }
        var currVal_12 = import4.interpolate(1, '', this.context.$implicit.name, '');
        if (import4.checkBinding(throwOnChange, this._expr_12, currVal_12)) {
            this.renderer.setText(this._text_6, currVal_12);
            this._expr_12 = currVal_12;
        }
        var currVal_13 = import4.interpolate(1, '', this.context.$implicit.countryName, '');
        if (import4.checkBinding(throwOnChange, this._expr_13, currVal_13)) {
            this.renderer.setText(this._text_9, currVal_13);
            this._expr_13 = currVal_13;
        }
    };
    _View_StateComponentsComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return _View_StateComponentsComponent1;
}(import1.AppView));
function viewFactory_StateComponentsComponent1(viewUtils, parentInjector, declarationEl) {
    return new _View_StateComponentsComponent1(viewUtils, parentInjector, declarationEl);
}


/***/ }

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,